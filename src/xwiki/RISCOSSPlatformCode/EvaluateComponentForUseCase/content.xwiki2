{{velocity}}
## -*- Mode:Velocity
## EvaluateComponentForUseCase?useCase=RISCOSSPlatformEntities.Test&entity=RISCOSSPlatformEntities.cjdelisle_cjdns
##
##
#set($EVAL_GROOVY_PG = "RISCOSSPlatformRiskAnalysisManagerCode.EvaluateGroovy")
#set ($analyserAPI = $xwiki.parseGroovyFromPage($EVAL_GROOVY_PG))
##
#set($ok = false)
#set($riskAnalysisSession = $request.getParameter('riskAnalysisSession'))
#if (!$riskAnalysisSession)
  #set($entity = $request.getParameter('entity'))
  #set($useCase = $request.getParameter('useCase'))
  #set($riskConfiguration = $request.getParameter('riskConfiguration'))
  #if("$!entity" == "")
    {{error}}Missing "entity" parameter{{/error}}
  #elseif("$!riskConfiguration" == "")
    {{error}}Missing "riskConfiguration" parameter{{/error}}
  #else
    #set($sessionDoc = $analyserAPI.getSessionDoc2(
        $xwiki, $entity, $useCase, $riskConfiguration, true))
    #if("$!sessionDoc" == "")
      {{error}}Null SessionDoc{{/error}}
    #elseif("$!sessionDoc" == "ERROR_riskConfig_nonexistant")
      {{error}}Parameter "riskConfiguration" points to nonexistant document{{/error}}
    #elseif("$!sessionDoc" == "ERROR_targetName_nonexistant")
      {{error}}Parameter "entity" points to nonexistant document{{/error}}
    #else
      #set($riskAnalysisSession = $sessionDoc.getFullName())
      #set($ok = true)
    #end
  #end
#else
  #set($sessionDoc = $xwiki.getDocument($riskAnalysisSession))
  #if($sessionDoc.isNew())
    {{error}}Parameter "riskAnalysisSession" points to nonexistant document{{/error}}
  #else
    #set($ok = true)
    #set($entity = $API.targetForSession($sessionDoc))
    #set($useCase = $API.useCaseForSession($sessionDoc))
    #set($riskConfiguration = $xwiki.getDocument($riskEvaluation.getProperty('riskConfiguration').getValue()))
  #end
#end
##
#if($ok == true)
  #set($inputs = $analyserAPI.getInputs($xcontext, $sessionDoc))
  #if ($inputs.getString("ret") != "0" ||
    "$!inputs.optJSONObject('output')" == "" ||
    "$!inputs.getJSONObject('output').optJSONObject('result')" == "")
    #set($ok = false)
    {{error}}
      Failed to get input values
      RETCODE: $inputs.getString("ret")

      STDOUT:

      {{code language=none}}
        $inputs.getString("stdout")
      {{/code}}

      STDERR:

      {{code language=none}}
        $inputs.getString("stderr")
      {{/code}}

      COMMAND:

      {{code language=none}}
        $inputs.getString("command")
      {{/code}}

    {{/error}}
  #end
#end
##
#if($ok == true)
  #set($entityDoc = $xwiki.getDocument($analyserAPI.targetForSession($sessionDoc)))
  #set($useCaseDocName = "")
  #if("$!useCase" != "")
    #set($useCaseDocName = $xwiki.getDocument($useCase).getName())
  #end
  #set($rdrpath = $analyserAPI.getRDRPath($xwiki))
  #set($riskData =
    $analyserAPI.getRiskData2($services, $inputs, $rdrpath, $entityDoc.name, $useCaseDocName))
  #set($riskData_output = $riskData.optJSONObject('output'))
  #if ("$!riskData_output" == "" || "$!riskData_output.optJSONArray('errors')" == "")
    #set($ok = false)
    {{error}}Failed to data from RDR (unknown error){{/error}}
  #else
    #set($errout = $riskData_output.getJSONArray('errors'))
    #if($errout.length() > 0)
      #set($ok = false)
      {{error}}
        Failed to data from RDR
        #foreach($err in $errout)

          {{code language=none}}$err{{/code}}

        #end

        RAWOUT: {{code language=none}}$riskData{{/code}}

      {{/error}}
    #end
  #end
#end
##
#if($ok == true)
  #set($outRaw = $analyserAPI.evaluate($xcontext, $sessionDoc, $riskData))
  #set($output = $outRaw.optJSONObject("output"))
  #set($result = "")
  #if($output)
    #set($result = $output.optJSONObject("result"))
  #end
  #if("$!result" == "")
    #set($ok = false)
    {{error}}
      Failed to run evaluation
      COMMAND: $outRaw.getString("command")

      RETCODE: $outRaw.getString("ret")
      STDOUT:

      {{code language=none}}
        $outRaw.getString("stdout")
      {{/code}}

      STDERR:

      {{code language=none}}
        $outRaw.getString("stderr")
      {{/code}}

      INPUT:

      {{code language=none}}
        $riskData.toString(2)
      {{/code}}

      RAWOUTPUT:

      {{code language=none}}
        $outRaw
      {{/code}}

    {{/error}}
  #end
#end
##
#if($ok == true)
  #if ($analyserAPI.storeResults($sessionDoc, $result, $riskData, $outRaw) != "ok")

    {{error}}
        Failed to store results
    {{/error}}

  #elseif ("$!request.getParameter('xredirect')" != "")
    $response.sendRedirect($request.getParameter('xredirect'))
  #else
    $response.sendRedirect($sessionDoc.getURL())
  #end
#end
{{/velocity}}
