XWikiObj(function (obj) {
    obj.setCache("long");
    obj.setCode("require(['jquery'],function($){\r\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\nmodule.exports = {\r\n  oauthd_url: \"https://oauth.io\",\r\n  oauthd_api: \"https://oauth.io/api\",\r\n  version: \"web-0.4.0\",\r\n  options: {}\r\n};\r\n\r\n},{}],2:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = function(Materia) {\r\n  var $;\r\n  $ = Materia.getJquery();\r\n  return {\r\n    get: (function(_this) {\r\n      return function(url, params) {\r\n        var base;\r\n        base = Materia.getOAuthdURL();\r\n        return $.ajax({\r\n          url: base + url,\r\n          type: 'get',\r\n          data: params\r\n        });\r\n      };\r\n    })(this),\r\n    post: (function(_this) {\r\n      return function(url, params) {\r\n        var base;\r\n        base = Materia.getOAuthdURL();\r\n        return $.ajax({\r\n          url: base + url,\r\n          type: 'post',\r\n          data: params\r\n        });\r\n      };\r\n    })(this),\r\n    put: (function(_this) {\r\n      return function(url, params) {\r\n        var base;\r\n        base = Materia.getOAuthdURL();\r\n        return $.ajax({\r\n          url: base + url,\r\n          type: 'put',\r\n          data: params\r\n        });\r\n      };\r\n    })(this),\r\n    del: (function(_this) {\r\n      return function(url, params) {\r\n        var base;\r\n        base = Materia.getOAuthdURL();\r\n        return $.ajax({\r\n          url: base + url,\r\n          type: 'delete',\r\n          data: params\r\n        });\r\n      };\r\n    })(this)\r\n  };\r\n};\r\n\r\n},{}],3:[function(require,module,exports){\r\n\"use strict\";\r\nvar Location, Url, cache, config, cookies;\r\n\r\nconfig = require('../config');\r\n\r\nUrl = require(\"../tools/url\");\r\n\r\nLocation = require('../tools/location_operations');\r\n\r\ncookies = require(\"../tools/cookies\");\r\n\r\ncache = require(\"../tools/cache\");\r\n\r\nmodule.exports = function(window, document, jquery, navigator) {\r\n  var Materia, location_operations;\r\n  Url = Url(document);\r\n  cookies.init(config, document);\r\n  location_operations = Location(document);\r\n  cache.init(cookies, config);\r\n  Materia = {\r\n    initialize: function(public_key, options) {\r\n      var i;\r\n      config.key = public_key;\r\n      if (options) {\r\n        for (i in options) {\r\n          config.options[i] = options[i];\r\n        }\r\n      }\r\n    },\r\n    setOAuthdURL: function(url) {\r\n      config.oauthd_url = url;\r\n      config.oauthd_base = Url.getAbsUrl(config.oauthd_url).match(/^.{2,5}:\\/\\/[^/]+/)[0];\r\n    },\r\n    getOAuthdURL: function() {\r\n      return config.oauthd_url;\r\n    },\r\n    getVersion: function() {\r\n      return config.version;\r\n    },\r\n    extend: function(name, module) {\r\n      return this[name] = module(this);\r\n    },\r\n    getConfig: function() {\r\n      return config;\r\n    },\r\n    getWindow: function() {\r\n      return window;\r\n    },\r\n    getDocument: function() {\r\n      return document;\r\n    },\r\n    getNavigator: function() {\r\n      return navigator;\r\n    },\r\n    getJquery: function() {\r\n      return jquery;\r\n    },\r\n    getUrl: function() {\r\n      return Url;\r\n    },\r\n    getCache: function() {\r\n      return cache;\r\n    },\r\n    getCookies: function() {\r\n      return cookies;\r\n    },\r\n    getLocationOperations: function() {\r\n      return location_operations;\r\n    }\r\n  };\r\n  return Materia;\r\n};\r\n\r\n},{\"../config\":1,\"../tools/cache\":9,\"../tools/cookies\":10,\"../tools/location_operations\":12,\"../tools/url\":14}],4:[function(require,module,exports){\r\n\"use strict\";\r\nvar cookies, oauthio_requests, sha1;\r\n\r\ncookies = require(\"../tools/cookies\");\r\n\r\noauthio_requests = require(\"./request\");\r\n\r\nsha1 = require(\"../tools/sha1\");\r\n\r\nmodule.exports = function(Materia) {\r\n  var $, Url, cache, client_states, config, document, location_operations, oauth, oauth_result, oauthio, parse_urlfragment, providers_api, window;\r\n  Url = Materia.getUrl();\r\n  config = Materia.getConfig();\r\n  document = Materia.getDocument();\r\n  window = Materia.getWindow();\r\n  $ = Materia.getJquery();\r\n  cache = Materia.getCache();\r\n  providers_api = require('./providers')(Materia);\r\n  config.oauthd_base = Url.getAbsUrl(config.oauthd_url).match(/^.{2,5}:\\/\\/[^/]+/)[0];\r\n  client_states = [];\r\n  oauth_result = void 0;\r\n  (parse_urlfragment = function() {\r\n    var cookie_state, results;\r\n    results = /[\\\\#&]oauthio=([^&]*)/.exec(document.location.hash);\r\n    if (results) {\r\n      document.location.hash = document.location.hash.replace(/&?oauthio=[^&]*/, \"\");\r\n      oauth_result = decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n      cookie_state = cookies.readCookie(\"oauthio_state\");\r\n      if (cookie_state) {\r\n        client_states.push(cookie_state);\r\n        cookies.eraseCookie(\"oauthio_state\");\r\n      }\r\n    }\r\n  })();\r\n  location_operations = Materia.getLocationOperations();\r\n  oauthio = {\r\n    request: oauthio_requests(Materia, client_states, providers_api)\r\n  };\r\n  oauth = {\r\n    initialize: function(public_key, options) {\r\n      return Materia.initialize(public_key, options);\r\n    },\r\n    setOAuthdURL: function(url) {\r\n      config.oauthd_url = url;\r\n      config.oauthd_base = Url.getAbsUrl(config.oauthd_url).match(/^.{2,5}:\\/\\/[^/]+/)[0];\r\n    },\r\n    create: function(provider, tokens, request) {\r\n      var i, make_res, make_res_endpoint, res;\r\n      if (!tokens) {\r\n        return cache.tryCache(oauth, provider, true);\r\n      }\r\n      if (typeof request !== \"object\") {\r\n        providers_api.fetchDescription(provider);\r\n      }\r\n      make_res = function(method) {\r\n        return oauthio.request.mkHttp(provider, tokens, request, method);\r\n      };\r\n      make_res_endpoint = function(method, url) {\r\n        return oauthio.request.mkHttpEndpoint(provider, tokens, request, method, url);\r\n      };\r\n      res = {};\r\n      for (i in tokens) {\r\n        res[i] = tokens[i];\r\n      }\r\n      res.get = make_res(\"GET\");\r\n      res.post = make_res(\"POST\");\r\n      res.put = make_res(\"PUT\");\r\n      res.patch = make_res(\"PATCH\");\r\n      res.del = make_res(\"DELETE\");\r\n      res.me = oauthio.request.mkHttpMe(provider, tokens, request, \"GET\");\r\n      return res;\r\n    },\r\n    popup: function(provider, opts, callback) {\r\n      var defer, frm, getMessage, gotmessage, interval, res, url, wnd, wndTimeout, wnd_options, wnd_settings;\r\n      gotmessage = false;\r\n      getMessage = function(e) {\r\n        if (!gotmessage) {\r\n          if (e.origin !== config.oauthd_base) {\r\n            return;\r\n          }\r\n          try {\r\n            wnd.close();\r\n          } catch (_error) {}\r\n          opts.data = e.data;\r\n          oauthio.request.sendCallback(opts, defer);\r\n          return gotmessage = true;\r\n        }\r\n      };\r\n      wnd = void 0;\r\n      frm = void 0;\r\n      wndTimeout = void 0;\r\n      defer = $.Deferred();\r\n      opts = opts || {};\r\n      if (!config.key) {\r\n        if (defer != null) {\r\n          defer.reject(new Error(\"OAuth object must be initialized\"));\r\n        }\r\n        if (callback == null) {\r\n          return defer.promise();\r\n        } else {\r\n          return callback(new Error(\"OAuth object must be initialized\"));\r\n        }\r\n      }\r\n      if (arguments.length === 2 && typeof opts === 'function') {\r\n        callback = opts;\r\n        opts = {};\r\n      }\r\n      if (cache.cacheEnabled(opts.cache)) {\r\n        res = cache.tryCache(oauth, provider, opts.cache);\r\n        if (res) {\r\n          if (defer != null) {\r\n            defer.resolve(res);\r\n          }\r\n          if (callback) {\r\n            return callback(null, res);\r\n          } else {\r\n            return defer.promise();\r\n          }\r\n        }\r\n      }\r\n      if (!opts.state) {\r\n        opts.state = sha1.create_hash();\r\n        opts.state_type = \"client\";\r\n      }\r\n      client_states.push(opts.state);\r\n      url = config.oauthd_url + \"/auth/\" + provider + \"?k=\" + config.key;\r\n      url += \"&d=\" + encodeURIComponent(Url.getAbsUrl(\"/\"));\r\n      if (opts) {\r\n        url += \"&opts=\" + encodeURIComponent(JSON.stringify(opts));\r\n      }\r\n      if (opts.wnd_settings) {\r\n        wnd_settings = opts.wnd_settings;\r\n        delete opts.wnd_settings;\r\n      } else {\r\n        wnd_settings = {\r\n          width: Math.floor(window.outerWidth * 0.8),\r\n          height: Math.floor(window.outerHeight * 0.5)\r\n        };\r\n      }\r\n      if (wnd_settings.height == null) {\r\n        wnd_settings.height = (wnd_settings.height < 350 ? 350 : void 0);\r\n      }\r\n      if (wnd_settings.width == null) {\r\n        wnd_settings.width = (wnd_settings.width < 800 ? 800 : void 0);\r\n      }\r\n      if (wnd_settings.left == null) {\r\n        wnd_settings.left = window.screenX + (window.outerWidth - wnd_settings.width) / 2;\r\n      }\r\n      if (wnd_settings.top == null) {\r\n        wnd_settings.top = window.screenY + (window.outerHeight - wnd_settings.height) / 8;\r\n      }\r\n      wnd_options = \"width=\" + wnd_settings.width + \",height=\" + wnd_settings.height;\r\n      wnd_options += \",toolbar=0,scrollbars=1,status=1,resizable=1,location=1,menuBar=0\";\r\n      wnd_options += \",left=\" + wnd_settings.left + \",top=\" + wnd_settings.top;\r\n      opts = {\r\n        provider: provider,\r\n        cache: opts.cache\r\n      };\r\n      opts.callback = function(e, r) {\r\n        if (window.removeEventListener) {\r\n          window.removeEventListener(\"message\", getMessage, false);\r\n        } else if (window.detachEvent) {\r\n          window.detachEvent(\"onmessage\", getMessage);\r\n        } else {\r\n          if (document.detachEvent) {\r\n            document.detachEvent(\"onmessage\", getMessage);\r\n          }\r\n        }\r\n        opts.callback = function() {};\r\n        if (wndTimeout) {\r\n          clearTimeout(wndTimeout);\r\n          wndTimeout = undefined;\r\n        }\r\n        if (callback) {\r\n          return callback(e, r);\r\n        } else {\r\n          return undefined;\r\n        }\r\n      };\r\n      if (window.attachEvent) {\r\n        window.attachEvent(\"onmessage\", getMessage);\r\n      } else if (document.attachEvent) {\r\n        document.attachEvent(\"onmessage\", getMessage);\r\n      } else {\r\n        if (window.addEventListener) {\r\n          window.addEventListener(\"message\", getMessage, false);\r\n        }\r\n      }\r\n      if (typeof chrome !== \"undefined\" && chrome.runtime && chrome.runtime.onMessageExternal) {\r\n        chrome.runtime.onMessageExternal.addListener(function(request, sender, sendResponse) {\r\n          request.origin = sender.url.match(/^.{2,5}:\\/\\/[^/]+/)[0];\r\n          if (defer != null) {\r\n            defer.resolve();\r\n          }\r\n          return getMessage(request);\r\n        });\r\n      }\r\n      if (!frm && (navigator.userAgent.indexOf(\"MSIE\") !== -1 || navigator.appVersion.indexOf(\"Trident/\") > 0)) {\r\n        frm = document.createElement(\"iframe\");\r\n        frm.src = config.oauthd_url + \"/auth/iframe?d=\" + encodeURIComponent(Url.getAbsUrl(\"/\"));\r\n        frm.width = 0;\r\n        frm.height = 0;\r\n        frm.frameBorder = 0;\r\n        frm.style.visibility = \"hidden\";\r\n        document.body.appendChild(frm);\r\n      }\r\n      wndTimeout = setTimeout(function() {\r\n        if (defer != null) {\r\n          defer.reject(new Error(\"Authorization timed out\"));\r\n        }\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          opts.callback(new Error(\"Authorization timed out\"));\r\n        }\r\n        try {\r\n          wnd.close();\r\n        } catch (_error) {}\r\n      }, 1200 * 1000);\r\n      wnd = window.open(url, \"Authorization\", wnd_options);\r\n      if (wnd) {\r\n        wnd.focus();\r\n        interval = window.setInterval(function() {\r\n          if (wnd === null || wnd.closed) {\r\n            window.clearInterval(interval);\r\n            if (!gotmessage) {\r\n              if (defer != null) {\r\n                defer.reject(new Error(\"The popup was closed\"));\r\n              }\r\n              if (opts.callback && typeof opts.callback === \"function\") {\r\n                return opts.callback(new Error(\"The popup was closed\"));\r\n              }\r\n            }\r\n          }\r\n        }, 500);\r\n      } else {\r\n        if (defer != null) {\r\n          defer.reject(new Error(\"Could not open a popup\"));\r\n        }\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          opts.callback(new Error(\"Could not open a popup\"));\r\n        }\r\n      }\r\n      return defer != null ? defer.promise() : void 0;\r\n    },\r\n    redirect: function(provider, opts, url) {\r\n      var redirect_uri, res;\r\n      if (arguments.length === 2) {\r\n        url = opts;\r\n        opts = {};\r\n      }\r\n      if (cache.cacheEnabled(opts.cache)) {\r\n        res = cache.tryCache(oauth, provider, opts.cache);\r\n        if (res) {\r\n          url = Url.getAbsUrl(url) + (url.indexOf(\"#\") === -1 ? \"#\" : \"&\") + \"oauthio=cache\";\r\n          location_operations.changeHref(url);\r\n          location_operations.reload();\r\n          return;\r\n        }\r\n      }\r\n      if (!opts.state) {\r\n        opts.state = sha1.create_hash();\r\n        opts.state_type = \"client\";\r\n      }\r\n      cookies.createCookie(\"oauthio_state\", opts.state);\r\n      redirect_uri = encodeURIComponent(Url.getAbsUrl(url));\r\n      url = config.oauthd_url + \"/auth/\" + provider + \"?k=\" + config.key;\r\n      url += \"&redirect_uri=\" + redirect_uri;\r\n      if (opts) {\r\n        url += \"&opts=\" + encodeURIComponent(JSON.stringify(opts));\r\n      }\r\n      location_operations.changeHref(url);\r\n    },\r\n    callback: function(provider, opts, callback) {\r\n      var defer, res;\r\n      defer = $.Deferred();\r\n      if (arguments.length === 1 && typeof provider === \"function\") {\r\n        callback = provider;\r\n        provider = undefined;\r\n        opts = {};\r\n      }\r\n      if (arguments.length === 1 && typeof provider === \"string\") {\r\n        opts = {};\r\n      }\r\n      if (arguments.length === 2 && typeof opts === \"function\") {\r\n        callback = opts;\r\n        opts = {};\r\n      }\r\n      if (cache.cacheEnabled(opts.cache) || oauth_result === \"cache\") {\r\n        res = cache.tryCache(oauth, provider, opts.cache);\r\n        if (oauth_result === \"cache\" && (typeof provider !== \"string\" || !provider)) {\r\n          if (defer != null) {\r\n            defer.reject(new Error(\"You must set a provider when using the cache\"));\r\n          }\r\n          if (callback) {\r\n            return callback(new Error(\"You must set a provider when using the cache\"));\r\n          } else {\r\n            return defer != null ? defer.promise() : void 0;\r\n          }\r\n        }\r\n        if (res) {\r\n          if (callback) {\r\n            if (res) {\r\n              return callback(null, res);\r\n            }\r\n          } else {\r\n            if (defer != null) {\r\n              defer.resolve(res);\r\n            }\r\n            return defer != null ? defer.promise() : void 0;\r\n          }\r\n        }\r\n      }\r\n      if (!oauth_result) {\r\n        return;\r\n      }\r\n      oauthio.request.sendCallback({\r\n        data: oauth_result,\r\n        provider: provider,\r\n        cache: opts.cache,\r\n        callback: callback\r\n      }, defer);\r\n      return defer != null ? defer.promise() : void 0;\r\n    },\r\n    clearCache: function(provider) {\r\n      cookies.eraseCookie(\"oauthio_provider_\" + provider);\r\n    },\r\n    http_me: function(opts) {\r\n      if (oauthio.request.http_me) {\r\n        oauthio.request.http_me(opts);\r\n      }\r\n    },\r\n    http: function(opts) {\r\n      if (oauthio.request.http) {\r\n        oauthio.request.http(opts);\r\n      }\r\n    },\r\n    getVersion: function() {\r\n      return Materia.getVersion.apply(this);\r\n    }\r\n  };\r\n  return oauth;\r\n};\r\n\r\n},{\"../tools/cookies\":10,\"../tools/sha1\":13,\"./providers\":5,\"./request\":6}],5:[function(require,module,exports){\r\n\"use strict\";\r\nvar config;\r\n\r\nconfig = require(\"../config\");\r\n\r\nmodule.exports = function(Materia) {\r\n  var $, providers_api, providers_cb, providers_desc;\r\n  $ = Materia.getJquery();\r\n  providers_desc = {};\r\n  providers_cb = {};\r\n  providers_api = {\r\n    execProvidersCb: function(provider, e, r) {\r\n      var cbs, i;\r\n      if (providers_cb[provider]) {\r\n        cbs = providers_cb[provider];\r\n        delete providers_cb[provider];\r\n        for (i in cbs) {\r\n          cbs[i](e, r);\r\n        }\r\n      }\r\n    },\r\n    fetchDescription: function(provider) {\r\n      if (providers_desc[provider]) {\r\n        return;\r\n      }\r\n      providers_desc[provider] = true;\r\n      $.ajax({\r\n        url: config.oauthd_api + \"/providers/\" + provider,\r\n        data: {\r\n          extend: true\r\n        },\r\n        dataType: \"json\"\r\n      }).done(function(data) {\r\n        providers_desc[provider] = data.data;\r\n        providers_api.execProvidersCb(provider, null, data.data);\r\n      }).always(function() {\r\n        if (typeof providers_desc[provider] !== \"object\") {\r\n          delete providers_desc[provider];\r\n          providers_api.execProvidersCb(provider, new Error(\"Unable to fetch request description\"));\r\n        }\r\n      });\r\n    },\r\n    getDescription: function(provider, opts, callback) {\r\n      opts = opts || {};\r\n      if (typeof providers_desc[provider] === \"object\") {\r\n        return callback(null, providers_desc[provider]);\r\n      }\r\n      if (!providers_desc[provider]) {\r\n        providers_api.fetchDescription(provider);\r\n      }\r\n      if (!opts.wait) {\r\n        return callback(null, {});\r\n      }\r\n      providers_cb[provider] = providers_cb[provider] || [];\r\n      providers_cb[provider].push(callback);\r\n    }\r\n  };\r\n  return providers_api;\r\n};\r\n\r\n},{\"../config\":1}],6:[function(require,module,exports){\r\n\"use strict\";\r\nvar Q, Url,\r\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\r\n\r\nUrl = require('../tools/url')();\r\n\r\nQ = require('q');\r\n\r\nmodule.exports = function(Materia, client_states, providers_api) {\r\n  var $, cache, config, extended_methods, fetched_methods;\r\n  $ = Materia.getJquery();\r\n  config = Materia.getConfig();\r\n  cache = Materia.getCache();\r\n  extended_methods = [];\r\n  fetched_methods = false;\r\n  return {\r\n    retrieveMethods: function() {\r\n      var defer;\r\n      defer = Q.defer();\r\n      if (!fetched_methods) {\r\n        $.ajax(config.oauthd_url + '/api/extended-endpoints').then(function(data) {\r\n          extended_methods = data.data;\r\n          fetched_methods = true;\r\n          return defer.resolve();\r\n        }).fail(function(e) {\r\n          fetched_methods = true;\r\n          return defer.reject(e);\r\n        });\r\n      } else {\r\n        defer.resolve(extended_methods);\r\n      }\r\n      return defer.promise;\r\n    },\r\n    generateMethods: function(request_object, tokens, provider) {\r\n      var k, kk, name_array, pt, v, vv, _results;\r\n      if (extended_methods != null) {\r\n        _results = [];\r\n        for (k in extended_methods) {\r\n          v = extended_methods[k];\r\n          name_array = v.name.split('.');\r\n          pt = request_object;\r\n          _results.push((function() {\r\n            var _results1;\r\n            _results1 = [];\r\n            for (kk in name_array) {\r\n              vv = name_array[kk];\r\n              if (kk < name_array.length - 1) {\r\n                if (pt[vv] == null) {\r\n                  pt[vv] = {};\r\n                }\r\n                _results1.push(pt = pt[vv]);\r\n              } else {\r\n                _results1.push(pt[vv] = this.mkHttpAll(provider, tokens, v, arguments));\r\n              }\r\n            }\r\n            return _results1;\r\n          }).apply(this, arguments));\r\n        }\r\n        return _results;\r\n      }\r\n    },\r\n    http: function(opts) {\r\n      var defer, desc_opts, doRequest, i, options;\r\n      doRequest = function() {\r\n        var i, k, qs, request;\r\n        request = options.oauthio.request || {};\r\n        if (!request.cors) {\r\n          options.url = encodeURIComponent(options.url);\r\n          if (options.url[0] !== \"/\") {\r\n            options.url = \"/\" + options.url;\r\n          }\r\n          options.url = config.oauthd_url + \"/request/\" + options.oauthio.provider + options.url;\r\n          options.headers = options.headers || {};\r\n          options.headers.oauthio = \"k=\" + config.key;\r\n          if (options.oauthio.tokens.oauth_token && options.oauthio.tokens.oauth_token_secret) {\r\n            options.headers.oauthio += \"&oauthv=1\";\r\n          }\r\n          for (k in options.oauthio.tokens) {\r\n            options.headers.oauthio += \"&\" + encodeURIComponent(k) + \"=\" + encodeURIComponent(options.oauthio.tokens[k]);\r\n          }\r\n          delete options.oauthio;\r\n          return $.ajax(options);\r\n        }\r\n        if (options.oauthio.tokens) {\r\n          if (options.oauthio.tokens.access_token) {\r\n            options.oauthio.tokens.token = options.oauthio.tokens.access_token;\r\n          }\r\n          if (!options.url.match(/^[a-z]{2,16}:\\/\\//)) {\r\n            if (options.url[0] !== \"/\") {\r\n              options.url = \"/\" + options.url;\r\n            }\r\n            options.url = request.url + options.url;\r\n          }\r\n          options.url = Url.replaceParam(options.url, options.oauthio.tokens, request.parameters);\r\n          if (request.query) {\r\n            qs = [];\r\n            for (i in request.query) {\r\n              qs.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(Url.replaceParam(request.query[i], options.oauthio.tokens, request.parameters)));\r\n            }\r\n            if (__indexOf.call(options.url, \"?\") >= 0) {\r\n              options.url += \"&\" + qs;\r\n            } else {\r\n              options.url += \"?\" + qs;\r\n            }\r\n          }\r\n          if (request.headers) {\r\n            options.headers = options.headers || {};\r\n            for (i in request.headers) {\r\n              options.headers[i] = Url.replaceParam(request.headers[i], options.oauthio.tokens, request.parameters);\r\n            }\r\n          }\r\n          delete options.oauthio;\r\n          return $.ajax(options);\r\n        }\r\n      };\r\n      options = {};\r\n      i = void 0;\r\n      for (i in opts) {\r\n        options[i] = opts[i];\r\n      }\r\n      if (!options.oauthio.request || options.oauthio.request === true) {\r\n        desc_opts = {\r\n          wait: !!options.oauthio.request\r\n        };\r\n        defer = $.Deferred();\r\n        providers_api.getDescription(options.oauthio.provider, desc_opts, function(e, desc) {\r\n          if (e) {\r\n            return defer.reject(e);\r\n          }\r\n          if (options.oauthio.tokens.oauth_token && options.oauthio.tokens.oauth_token_secret) {\r\n            options.oauthio.request = desc.oauth1 && desc.oauth1.request;\r\n          } else {\r\n            options.oauthio.request = desc.oauth2 && desc.oauth2.request;\r\n          }\r\n          defer.resolve();\r\n        });\r\n        return defer.then(doRequest);\r\n      } else {\r\n        return doRequest();\r\n      }\r\n    },\r\n    http_me: function(opts) {\r\n      var defer, desc_opts, doRequest, k, options;\r\n      doRequest = function() {\r\n        var defer, k, promise, request;\r\n        defer = $.Deferred();\r\n        request = options.oauthio.request || {};\r\n        options.url = config.oauthd_url + \"/auth/\" + options.oauthio.provider + \"/me\";\r\n        options.headers = options.headers || {};\r\n        options.headers.oauthio = \"k=\" + config.key;\r\n        if (options.oauthio.tokens.oauth_token && options.oauthio.tokens.oauth_token_secret) {\r\n          options.headers.oauthio += \"&oauthv=1\";\r\n        }\r\n        for (k in options.oauthio.tokens) {\r\n          options.headers.oauthio += \"&\" + encodeURIComponent(k) + \"=\" + encodeURIComponent(options.oauthio.tokens[k]);\r\n        }\r\n        delete options.oauthio;\r\n        promise = $.ajax(options);\r\n        $.when(promise).done(function(data) {\r\n          defer.resolve(data.data);\r\n        }).fail(function(data) {\r\n          if (data.responseJSON) {\r\n            defer.reject(data.responseJSON.data);\r\n          } else {\r\n            defer.reject(new Error(\"An error occured while trying to access the resource\"));\r\n          }\r\n        });\r\n        return defer.promise();\r\n      };\r\n      options = {};\r\n      for (k in opts) {\r\n        options[k] = opts[k];\r\n      }\r\n      if (!options.oauthio.request || options.oauthio.request === true) {\r\n        desc_opts = {\r\n          wait: !!options.oauthio.request\r\n        };\r\n        defer = $.Deferred();\r\n        providers_api.getDescription(options.oauthio.provider, desc_opts, function(e, desc) {\r\n          if (e) {\r\n            return defer.reject(e);\r\n          }\r\n          if (options.oauthio.tokens.oauth_token && options.oauthio.tokens.oauth_token_secret) {\r\n            options.oauthio.request = desc.oauth1 && desc.oauth1.request;\r\n          } else {\r\n            options.oauthio.request = desc.oauth2 && desc.oauth2.request;\r\n          }\r\n          defer.resolve();\r\n        });\r\n        return defer.then(doRequest);\r\n      } else {\r\n        return doRequest();\r\n      }\r\n    },\r\n    http_all: function(options, endpoint_descriptor, parameters) {\r\n      var doRequest;\r\n      doRequest = function() {\r\n        var defer, k, promise, request;\r\n        defer = $.Deferred();\r\n        request = options.oauthio.request || {};\r\n        options.headers = options.headers || {};\r\n        options.headers.oauthio = \"k=\" + config.key;\r\n        if (options.oauthio.tokens.oauth_token && options.oauthio.tokens.oauth_token_secret) {\r\n          options.headers.oauthio += \"&oauthv=1\";\r\n        }\r\n        for (k in options.oauthio.tokens) {\r\n          options.headers.oauthio += \"&\" + encodeURIComponent(k) + \"=\" + encodeURIComponent(options.oauthio.tokens[k]);\r\n        }\r\n        delete options.oauthio;\r\n        promise = $.ajax(options);\r\n        $.when(promise).done(function(data) {\r\n          var error;\r\n          if (typeof data.data === 'string') {\r\n            try {\r\n              data.data = JSON.parse(data.data);\r\n            } catch (_error) {\r\n              error = _error;\r\n              data.data = data.data;\r\n            } finally {\r\n              defer.resolve(data.data);\r\n            }\r\n          }\r\n        }).fail(function(data) {\r\n          if (data.responseJSON) {\r\n            defer.reject(data.responseJSON.data);\r\n          } else {\r\n            defer.reject(new Error(\"An error occured while trying to access the resource\"));\r\n          }\r\n        });\r\n        return defer.promise();\r\n      };\r\n      return doRequest();\r\n    },\r\n    mkHttp: function(provider, tokens, request, method) {\r\n      var base;\r\n      base = this;\r\n      return function(opts, opts2) {\r\n        var i, options;\r\n        options = {};\r\n        if (typeof opts === \"string\") {\r\n          if (typeof opts2 === \"object\") {\r\n            for (i in opts2) {\r\n              options[i] = opts2[i];\r\n            }\r\n          }\r\n          options.url = opts;\r\n        } else if (typeof opts === \"object\") {\r\n          for (i in opts) {\r\n            options[i] = opts[i];\r\n          }\r\n        }\r\n        options.type = options.type || method;\r\n        options.oauthio = {\r\n          provider: provider,\r\n          tokens: tokens,\r\n          request: request\r\n        };\r\n        return base.http(options);\r\n      };\r\n    },\r\n    mkHttpMe: function(provider, tokens, request, method) {\r\n      var base;\r\n      base = this;\r\n      return function(filter) {\r\n        var options;\r\n        options = {};\r\n        options.type = options.type || method;\r\n        options.oauthio = {\r\n          provider: provider,\r\n          tokens: tokens,\r\n          request: request\r\n        };\r\n        options.data = options.data || {};\r\n        options.data.filter = (filter ? filter.join(\",\") : undefined);\r\n        return base.http_me(options);\r\n      };\r\n    },\r\n    mkHttpAll: function(provider, tokens, endpoint_descriptor) {\r\n      var base;\r\n      base = this;\r\n      return function() {\r\n        var k, options, th_param, v;\r\n        options = {};\r\n        options.type = endpoint_descriptor.method;\r\n        options.url = config.oauthd_url + endpoint_descriptor.endpoint.replace(':provider', provider);\r\n        options.oauthio = {\r\n          provider: provider,\r\n          tokens: tokens\r\n        };\r\n        options.data = {};\r\n        for (k in arguments) {\r\n          v = arguments[k];\r\n          th_param = endpoint_descriptor.params[k];\r\n          if (th_param != null) {\r\n            options.data[th_param.name] = v;\r\n          }\r\n        }\r\n        options.data = options.data || {};\r\n        return base.http_all(options, endpoint_descriptor, arguments);\r\n      };\r\n    },\r\n    sendCallback: function(opts, defer) {\r\n      var base, data, e, err, i, k, make_res, request, res, tokens, v;\r\n      base = this;\r\n      data = void 0;\r\n      err = void 0;\r\n      try {\r\n        data = JSON.parse(opts.data);\r\n      } catch (_error) {\r\n        e = _error;\r\n        defer.reject(new Error(\"Error while parsing result\"));\r\n        return opts.callback(new Error(\"Error while parsing result\"));\r\n      }\r\n      if (!data || !data.provider) {\r\n        return;\r\n      }\r\n      if (opts.provider && data.provider.toLowerCase() !== opts.provider.toLowerCase()) {\r\n        err = new Error(\"Returned provider name does not match asked provider\");\r\n        defer.reject(err);\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          return opts.callback(err);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (data.status === \"error\" || data.status === \"fail\") {\r\n        err = new Error(data.message);\r\n        err.body = data.data;\r\n        defer.reject(err);\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          return opts.callback(err);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (data.status !== \"success\" || !data.data) {\r\n        err = new Error();\r\n        err.body = data.data;\r\n        defer.reject(err);\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          return opts.callback(err);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      data.state = data.state.replace(/\\s+/g, \"\");\r\n      for (k in client_states) {\r\n        v = client_states[k];\r\n        try {\r\n          client_states[k] = v.replace(/\\s+/g, \"\");\r\n        }\r\n        catch(err) {\r\n          client_states[k] = v;\r\n        }\r\n      }\r\n      if (!data.state || client_states.indexOf(data.state) === -1) {\r\n        defer.reject(new Error(\"State is not matching\"));\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          return opts.callback(new Error(\"State is not matching\"));\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (!opts.provider) {\r\n        data.data.provider = data.provider;\r\n      }\r\n      res = data.data;\r\n      res.provider = data.provider.toLowerCase();\r\n      if (cache.cacheEnabled(opts.cache) && res) {\r\n        cache.storeCache(data.provider, res);\r\n      }\r\n      request = res.request;\r\n      delete res.request;\r\n      tokens = void 0;\r\n      if (res.access_token) {\r\n        tokens = {\r\n          access_token: res.access_token\r\n        };\r\n      } else if (res.oauth_token && res.oauth_token_secret) {\r\n        tokens = {\r\n          oauth_token: res.oauth_token,\r\n          oauth_token_secret: res.oauth_token_secret\r\n        };\r\n      }\r\n      if (!request) {\r\n        defer.resolve(res);\r\n        if (opts.callback && typeof opts.callback === \"function\") {\r\n          return opts.callback(null, res);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (request.required) {\r\n        for (i in request.required) {\r\n          tokens[request.required[i]] = res[request.required[i]];\r\n        }\r\n      }\r\n      make_res = function(method) {\r\n        return base.mkHttp(data.provider, tokens, request, method);\r\n      };\r\n      res.toJson = function() {\r\n        var a;\r\n        a = {};\r\n        if (res.access_token != null) {\r\n          a.access_token = res.access_token;\r\n        }\r\n        if (res.oauth_token != null) {\r\n          a.oauth_token = res.oauth_token;\r\n        }\r\n        if (res.oauth_token_secret != null) {\r\n          a.oauth_token_secret = res.oauth_token_secret;\r\n        }\r\n        if (res.expires_in != null) {\r\n          a.expires_in = res.expires_in;\r\n        }\r\n        if (res.token_type != null) {\r\n          a.token_type = res.token_type;\r\n        }\r\n        if (res.id_token != null) {\r\n          a.id_token = res.id_token;\r\n        }\r\n        if (res.provider != null) {\r\n          a.provider = res.provider;\r\n        }\r\n        if (res.email != null) {\r\n          a.email = res.email;\r\n        }\r\n        return a;\r\n      };\r\n      res.get = make_res(\"GET\");\r\n      res.post = make_res(\"POST\");\r\n      res.put = make_res(\"PUT\");\r\n      res.patch = make_res(\"PATCH\");\r\n      res.del = make_res(\"DELETE\");\r\n      res.me = base.mkHttpMe(data.provider, tokens, request, \"GET\");\r\n      return this.retrieveMethods().then((function(_this) {\r\n        return function() {\r\n          _this.generateMethods(res, tokens, data.provider);\r\n          defer.resolve(res);\r\n          if (opts.callback && typeof opts.callback === \"function\") {\r\n            return opts.callback(null, res);\r\n          } else {\r\n\r\n          }\r\n        };\r\n      })(this)).fail((function(_this) {\r\n        return function(e) {\r\n          console.log('Could not retrieve methods', e);\r\n          defer.resolve(res);\r\n          if (opts.callback && typeof opts.callback === \"function\") {\r\n            return opts.callback(null, res);\r\n          } else {\r\n\r\n          }\r\n        };\r\n      })(this));\r\n    }\r\n  };\r\n};\r\n\r\n},{\"../tools/url\":14,\"q\":16}],7:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = function(Materia) {\r\n  var $, UserObject, config, cookieStore, lastSave;\r\n  $ = Materia.getJquery();\r\n  config = Materia.getConfig();\r\n  cookieStore = Materia.getCookies();\r\n  lastSave = null;\r\n  UserObject = (function() {\r\n    function UserObject(data) {\r\n      this.token = data.token;\r\n      this.data = data.user;\r\n      this.providers = data.providers;\r\n      lastSave = this.getEditableData();\r\n    }\r\n\r\n    UserObject.prototype.getEditableData = function() {\r\n      var data, key;\r\n      data = [];\r\n      for (key in this.data) {\r\n        if (['id', 'email'].indexOf(key) === -1) {\r\n          data.push({\r\n            key: key,\r\n            value: this.data[key]\r\n          });\r\n        }\r\n      }\r\n      return data;\r\n    };\r\n\r\n    UserObject.prototype.save = function() {\r\n      var d, dataToSave, keyIsInLastSave, _i, _j, _len, _len1, _ref;\r\n      dataToSave = {};\r\n      for (_i = 0, _len = lastSave.length; _i < _len; _i++) {\r\n        d = lastSave[_i];\r\n        if (this.data[d.key] !== d.value) {\r\n          dataToSave[d.key] = this.data[d.key];\r\n        }\r\n        if (this.data[d.key] === null) {\r\n          delete this.data[d.key];\r\n        }\r\n      }\r\n      keyIsInLastSave = function(key) {\r\n        var o, _j, _len1;\r\n        for (_j = 0, _len1 = lastSave.length; _j < _len1; _j++) {\r\n          o = lastSave[_j];\r\n          if (o.key === key) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      _ref = this.getEditableData();\r\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\r\n        d = _ref[_j];\r\n        if (!keyIsInLastSave(d.key)) {\r\n          dataToSave[d.key] = this.data[d.key];\r\n        }\r\n      }\r\n      this.saveLocal();\r\n      return Materia.API.put('/api/usermanagement/user?k=' + config.key + '&token=' + this.token, dataToSave);\r\n    };\r\n\r\n    UserObject.prototype.select = function(provider) {\r\n      var OAuthResult;\r\n      OAuthResult = null;\r\n      return OAuthResult;\r\n    };\r\n\r\n    UserObject.prototype.saveLocal = function() {\r\n      var copy;\r\n      copy = {\r\n        token: this.token,\r\n        user: this.data,\r\n        providers: this.providers\r\n      };\r\n      cookieStore.eraseCookie('oio_auth');\r\n      return cookieStore.createCookie('oio_auth', JSON.stringify(copy), 21600);\r\n    };\r\n\r\n    UserObject.prototype.hasProvider = function(provider) {\r\n      var _ref;\r\n      return ((_ref = this.providers) != null ? _ref.indexOf(provider) : void 0) !== -1;\r\n    };\r\n\r\n    UserObject.prototype.getProviders = function() {\r\n      var defer;\r\n      defer = $.Deferred();\r\n      Materia.API.get('/api/usermanagement/user/providers?k=' + config.key + '&token=' + this.token).done((function(_this) {\r\n        return function(providers) {\r\n          _this.providers = providers.data;\r\n          _this.saveLocal();\r\n          return defer.resolve(_this.providers);\r\n        };\r\n      })(this)).fail(function(err) {\r\n        return defer.reject(err);\r\n      });\r\n      return defer.promise();\r\n    };\r\n\r\n    UserObject.prototype.addProvider = function(oauthRes) {\r\n      var defer;\r\n      defer = $.Deferred();\r\n      if (typeof oauthRes.toJson === 'function') {\r\n        oauthRes = oauthRes.toJson();\r\n      }\r\n      oauthRes.email = this.data.email;\r\n      this.providers.push(oauthRes.provider);\r\n      Materia.API.post('/api/usermanagement/user/providers?k=' + config.key + '&token=' + this.token, oauthRes).done((function(_this) {\r\n        return function(res) {\r\n          _this.data = res.data;\r\n          _this.saveLocal();\r\n          return defer.resolve();\r\n        };\r\n      })(this)).fail((function(_this) {\r\n        return function(err) {\r\n          _this.providers.splice(_this.providers.indexOf(oauthRes.provider), 1);\r\n          return defer.reject(err);\r\n        };\r\n      })(this));\r\n      return defer.promise();\r\n    };\r\n\r\n    UserObject.prototype.removeProvider = function(provider) {\r\n      var defer;\r\n      defer = $.Deferred();\r\n      this.providers.splice(this.providers.indexOf(provider), 1);\r\n      Materia.API.del('/api/usermanagement/user/providers/' + provider + '?k=' + config.key + '&token=' + this.token).done((function(_this) {\r\n        return function(res) {\r\n          _this.saveLocal();\r\n          return defer.resolve(res);\r\n        };\r\n      })(this)).fail((function(_this) {\r\n        return function(err) {\r\n          _this.providers.push(provider);\r\n          return defer.reject(err);\r\n        };\r\n      })(this));\r\n      return defer.promise();\r\n    };\r\n\r\n    UserObject.prototype.changePassword = function(oldPassword, newPassword) {\r\n      return Materia.API.post('/api/usermanagement/user/password?k=' + config.key + '&token=' + this.token, {\r\n        password: newPassword\r\n      });\r\n    };\r\n\r\n    UserObject.prototype.isLoggued = function() {\r\n      return Materia.User.isLogged();\r\n    };\r\n\r\n    UserObject.prototype.logout = function() {\r\n      var defer;\r\n      defer = $.Deferred();\r\n      cookieStore.eraseCookie('oio_auth');\r\n      Materia.API.post('/api/usermanagement/user/logout?k=' + config.key + '&token=' + this.token).done(function() {\r\n        return defer.resolve();\r\n      }).fail(function(err) {\r\n        return defer.reject(err);\r\n      });\r\n      return defer.promise();\r\n    };\r\n\r\n    return UserObject;\r\n\r\n  })();\r\n  return {\r\n    initialize: function(public_key, options) {\r\n      return Materia.initialize(public_key, options);\r\n    },\r\n    setOAuthdURL: function(url) {\r\n      return Materia.setOAuthdURL(url);\r\n    },\r\n    signup: function(data) {\r\n      var defer;\r\n      defer = $.Deferred();\r\n      if (typeof data.toJson === 'function') {\r\n        data = data.toJson();\r\n      }\r\n      Materia.API.post('/api/usermanagement/signup?k=' + config.key, data).done(function(res) {\r\n        cookieStore.createCookie('oio_auth', JSON.stringify(res.data), res.data.expires_in || 21600);\r\n        return defer.resolve(new UserObject(res.data));\r\n      }).fail(function(err) {\r\n        return defer.reject(err);\r\n      });\r\n      return defer.promise();\r\n    },\r\n    signin: function(email, password) {\r\n      var defer, signinData;\r\n      defer = $.Deferred();\r\n      if (typeof email !== \"string\" && !password) {\r\n        signinData = email;\r\n        if (typeof signinData.toJson === 'function') {\r\n          signinData = signinData.toJson();\r\n        }\r\n        Materia.API.post('/api/usermanagement/signin?k=' + config.key, signinData).done(function(res) {\r\n          cookieStore.createCookie('oio_auth', JSON.stringify(res.data), res.data.expires_in || 21600);\r\n          return defer.resolve(new UserObject(res.data));\r\n        }).fail(function(err) {\r\n          return defer.reject(err);\r\n        });\r\n      } else {\r\n        Materia.API.post('/api/usermanagement/signin?k=' + config.key, {\r\n          email: email,\r\n          password: password\r\n        }).done(function(res) {\r\n          cookieStore.createCookie('oio_auth', JSON.stringify(res.data), res.data.expires_in || 21600);\r\n          return defer.resolve(new UserObject(res.data));\r\n        }).fail(function(err) {\r\n          return defer.reject(err);\r\n        });\r\n      }\r\n      return defer.promise();\r\n    },\r\n    confirmResetPassword: function(newPassword, key) {\r\n      return Materia.API.post('/api/usermanagement/user/password?k=' + config.key + '&token=' + this.token, {\r\n        password: newPassword,\r\n        passwordKey: key\r\n      });\r\n    },\r\n    resetPassword: function(email, callback) {\r\n      return Materia.API.post('/api/usermanagement/password/reset?k=' + config.key, {\r\n        email: email\r\n      });\r\n    },\r\n    refreshIdentity: function() {\r\n      var defer;\r\n      defer = $.Deferred();\r\n      Materia.API.get('/api/usermanagement/user?k=' + config.key + '&token=' + cookieStore.readCookie('oio_auth')).done(function(res) {\r\n        return defer.resolve(new UserObject(res.data));\r\n      }).fail(function(err) {\r\n        return defer.reject(err);\r\n      });\r\n      return defer.promise();\r\n    },\r\n    getIdentity: function() {\r\n      return new UserObject(JSON.parse(cookieStore.readCookie('oio_auth')));\r\n    },\r\n    isLogged: function() {\r\n      var a;\r\n      a = cookieStore.readCookie('oio_auth');\r\n      if (a) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\n},{}],8:[function(require,module,exports){\r\n(function() {\r\n  var Materia, jquery;\r\n  jquery = require('./tools/jquery-lite.js');\r\n  Materia = require('./lib/core')(window, document, jquery, navigator);\r\n  Materia.extend('OAuth', require('./lib/oauth'));\r\n  Materia.extend('API', require('./lib/api'));\r\n  Materia.extend('User', require('./lib/user'));\r\n  if (typeof angular !== \"undefined\" && angular !== null) {\r\n    angular.module('oauthio', []).factory('Materia', [\r\n      function() {\r\n        return Materia;\r\n      }\r\n    ]).factory('OAuth', [\r\n      function() {\r\n        return Materia.OAuth;\r\n      }\r\n    ]).factory('User', [\r\n      function() {\r\n        return Materia.User;\r\n      }\r\n    ]);\r\n  }\r\n  window.Materia = Materia;\r\n  window.User = window.Materia.User;\r\n  return window.OAuth = window.Materia.OAuth;\r\n})();\r\n\r\n},{\"./lib/api\":2,\"./lib/core\":3,\"./lib/oauth\":4,\"./lib/user\":7,\"./tools/jquery-lite.js\":11}],9:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = {\r\n  init: function(cookies_module, config) {\r\n    this.config = config;\r\n    return this.cookies = cookies_module;\r\n  },\r\n  tryCache: function(OAuth, provider, cache) {\r\n    var e, i, res;\r\n    if (this.cacheEnabled(cache)) {\r\n      cache = this.cookies.readCookie(\"oauthio_provider_\" + provider);\r\n      if (!cache) {\r\n        return false;\r\n      }\r\n      cache = decodeURIComponent(cache);\r\n    }\r\n    if (typeof cache === \"string\") {\r\n      try {\r\n        cache = JSON.parse(cache);\r\n      } catch (_error) {\r\n        e = _error;\r\n        return false;\r\n      }\r\n    }\r\n    if (typeof cache === \"object\") {\r\n      res = {};\r\n      for (i in cache) {\r\n        if (i !== \"request\" && typeof cache[i] !== \"function\") {\r\n          res[i] = cache[i];\r\n        }\r\n      }\r\n      return OAuth.create(provider, res, cache.request);\r\n    }\r\n    return false;\r\n  },\r\n  storeCache: function(provider, cache) {\r\n    this.cookies.createCookie(\"oauthio_provider_\" + provider, encodeURIComponent(JSON.stringify(cache)), cache.expires_in - 10 || 3600);\r\n  },\r\n  cacheEnabled: function(cache) {\r\n    if (typeof cache === \"undefined\") {\r\n      return this.config.options.cache;\r\n    }\r\n    return cache;\r\n  }\r\n};\r\n\r\n},{}],10:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = {\r\n  init: function(config, document) {\r\n    this.config = config;\r\n    return this.document = document;\r\n  },\r\n  createCookie: function(name, value, expires) {\r\n    var date;\r\n    this.eraseCookie(name);\r\n    date = new Date();\r\n    date.setTime(date.getTime() + (expires || 1200) * 1000);\r\n    expires = \"; expires=\" + date.toGMTString();\r\n    this.document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n  },\r\n  readCookie: function(name) {\r\n    var c, ca, i, nameEQ;\r\n    nameEQ = name + \"=\";\r\n    ca = this.document.cookie.split(\";\");\r\n    i = 0;\r\n    while (i < ca.length) {\r\n      c = ca[i];\r\n      while (c.charAt(0) === \" \") {\r\n        c = c.substring(1, c.length);\r\n      }\r\n      if (c.indexOf(nameEQ) === 0) {\r\n        return c.substring(nameEQ.length, c.length);\r\n      }\r\n      i++;\r\n    }\r\n    return null;\r\n  },\r\n  eraseCookie: function(name) {\r\n    var date;\r\n    date = new Date();\r\n    date.setTime(date.getTime() - 86400000);\r\n    this.document.cookie = name + \"=; expires=\" + date.toGMTString() + \"; path=/\";\r\n  }\r\n};\r\n\r\n},{}],11:[function(require,module,exports){\r\n/*!\r\n * jQuery JavaScript Library v2.1.1 -attributes,-attributes/attr,-attributes/classes,-attributes/prop,-attributes/support,-attributes/val,-css/addGetHookIf,-css/curCSS,-css/defaultDisplay,-css/hiddenVisibleSelectors,-css/support,-css/swap,-css/var,-css/var/cssExpand,-css/var/getStyles,-css/var/isHidden,-css/var/rmargin,-css/var/rnumnonpx,-css,-effects,-effects/Tween,-effects/animatedSelector,-dimensions,-offset,-data/var/data_user,-deprecated,-event/alias,-event/support,-intro,-manipulation/_evalUrl,-manipulation/support,-manipulation/var,-manipulation/var/rcheckableType,-manipulation,-outro,-queue,-queue/delay,-selector-native,-selector-sizzle,-sizzle/dist,-sizzle/dist/sizzle,-sizzle/dist/min,-sizzle/test,-sizzle/test/jquery,-traversing,-traversing/findFilter,-traversing/var/rneedsContext,-traversing/var,-wrap,-exports,-exports/amd\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2014-09-24T13:40Z\r\n */\r\n\r\n(function( global, factory ) {\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\t// For CommonJS and CommonJS-like environments where a proper window is present,\r\n\t\t// execute the factory and get jQuery\r\n\t\t// For environments that do not inherently posses a window with a document\r\n\t\t// (such as Node.js), expose a jQuery-making factory as module.exports\r\n\t\t// This accentuates the need for the creation of a real window\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket #14549 for more info\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Can't do this because several apps including ASP.NET trace\r\n// the stack via arguments.caller.callee and Firefox dies if\r\n// you try to trace through \"use strict\" call chains. (#13335)\r\n// Support: Firefox 18+\r\n//\r\n\r\nvar arr = [];\r\n\r\nvar slice = arr.slice;\r\n\r\nvar concat = arr.concat;\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar support = {};\r\n\r\n\r\n\r\nvar\r\n\t// Use the correct document accordingly with window argument (sandbox)\r\n\tdocument = window.document,\r\n\r\n\tversion = \"2.1.1 -attributes,-attributes/attr,-attributes/classes,-attributes/prop,-attributes/support,-attributes/val,-css/addGetHookIf,-css/curCSS,-css/defaultDisplay,-css/hiddenVisibleSelectors,-css/support,-css/swap,-css/var,-css/var/cssExpand,-css/var/getStyles,-css/var/isHidden,-css/var/rmargin,-css/var/rnumnonpx,-css,-effects,-effects/Tween,-effects/animatedSelector,-dimensions,-offset,-data/var/data_user,-deprecated,-event/alias,-event/support,-intro,-manipulation/_evalUrl,-manipulation/support,-manipulation/var,-manipulation/var/rcheckableType,-manipulation,-outro,-queue,-queue/delay,-selector-native,-selector-sizzle,-sizzle/dist,-sizzle/dist/sizzle,-sizzle/dist/min,-sizzle/test,-sizzle/test/jquery,-traversing,-traversing/findFilter,-traversing/var/rneedsContext,-traversing/var,-wrap,-exports,-exports/amd\",\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\t// Make sure we trim BOM and NBSP\r\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n\t// Matches dashed string for camelizing\r\n\trmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([\\da-z])/gi,\r\n\r\n\t// Used by jQuery.camelCase as callback to replace()\r\n\tfcamelCase = function( all, letter ) {\r\n\t\treturn letter.toUpperCase();\r\n\t};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// Start with an empty selector\r\n\tselector: \"\",\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\t\treturn num != null ?\r\n\r\n\t\t\t// Return just the one element from the set\r\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\r\n\r\n\t\t\t// Return all the elements in a clean array\r\n\t\t\tslice.call( this );\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\t\tret.context = this.context;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\t// (You can seed the arguments with an array of args, but this is\r\n\t// only used internally.)\r\n\teach: function( callback, args ) {\r\n\t\treturn jQuery.each( this, callback, args );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t}));\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor(null);\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[0] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( (options = arguments[ i ]) != null ) {\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tsrc = target[ name ];\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\r\n\t\t\t\t\tif ( copyIsArray ) {\r\n\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend({\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\t// See test/unit/core.js for details concerning isFunction.\r\n\t// Since version 1.3, DOM methods and functions like alert\r\n\t// aren't supported. They return false on IE (#2968).\r\n\tisFunction: function( obj ) {\r\n\t\treturn jQuery.type(obj) === \"function\";\r\n\t},\r\n\r\n\tisArray: Array.isArray,\r\n\r\n\tisWindow: function( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t},\r\n\r\n\tisNumeric: function( obj ) {\r\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\treturn !jQuery.isArray( obj ) && obj - parseFloat( obj ) >= 0;\r\n\t},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\t\t// Not plain objects:\r\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\r\n\t\t// - DOM nodes\r\n\t\t// - window\r\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( obj.constructor &&\r\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If the function hasn't returned already, we're confident that\r\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\r\n\t\treturn true;\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\t\tvar name;\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\ttype: function( obj ) {\r\n\t\tif ( obj == null ) {\r\n\t\t\treturn obj + \"\";\r\n\t\t}\r\n\t\t// Support: Android < 4.0, iOS < 6 (functionish RegExp)\r\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\r\n\t\t\ttypeof obj;\r\n\t},\r\n\r\n\t// Evaluates a script in a global context\r\n\tglobalEval: function( code ) {\r\n\t\tvar script,\r\n\t\t\tindirect = eval;\r\n\r\n\t\tcode = jQuery.trim( code );\r\n\r\n\t\tif ( code ) {\r\n\t\t\t// If the code includes a valid, prologue position\r\n\t\t\t// strict mode pragma, execute code by injecting a\r\n\t\t\t// script tag into the document.\r\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\r\n\t\t\t\tscript = document.createElement(\"script\");\r\n\t\t\t\tscript.text = code;\r\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\r\n\t\t\t} else {\r\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\r\n\t\t\t// and removal by using an indirect global eval\r\n\t\t\t\tindirect( code );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Convert dashed to camelCase; used by the css and data modules\r\n\t// Microsoft forgot to hump their vendor prefix (#9572)\r\n\tcamelCase: function( string ) {\r\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n\t},\r\n\r\n\tnodeName: function( elem, name ) {\r\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\t},\r\n\r\n\t// args is for internal usage only\r\n\teach: function( obj, callback, args ) {\r\n\t\tvar value,\r\n\t\t\ti = 0,\r\n\t\t\tlength = obj.length,\r\n\t\t\tisArray = isArraylike( obj );\r\n\r\n\t\tif ( args ) {\r\n\t\t\tif ( isArray ) {\r\n\t\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\r\n\r\n\t\t\t\t\tif ( value === false ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( i in obj ) {\r\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\r\n\r\n\t\t\t\t\tif ( value === false ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// A special, fast, case for the most common use of each\r\n\t\t} else {\r\n\t\t\tif ( isArray ) {\r\n\t\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\r\n\r\n\t\t\t\t\tif ( value === false ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( i in obj ) {\r\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\r\n\r\n\t\t\t\t\tif ( value === false ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\ttrim: function( text ) {\r\n\t\treturn text == null ?\r\n\t\t\t\"\" :\r\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArraylike( Object(arr) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar value,\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tisArray = isArraylike( elems ),\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArray ) {\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn concat.apply( [], ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// Bind a function to a context, optionally partially applying any\r\n\t// arguments.\r\n\tproxy: function( fn, context ) {\r\n\t\tvar tmp, args, proxy;\r\n\r\n\t\tif ( typeof context === \"string\" ) {\r\n\t\t\ttmp = fn[ context ];\r\n\t\t\tcontext = fn;\r\n\t\t\tfn = tmp;\r\n\t\t}\r\n\r\n\t\t// Quick check to determine if target is callable, in the spec\r\n\t\t// this throws a TypeError, but we will just return undefined.\r\n\t\tif ( !jQuery.isFunction( fn ) ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Simulated bind\r\n\t\targs = slice.call( arguments, 2 );\r\n\t\tproxy = function() {\r\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t\t};\r\n\r\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\t\treturn proxy;\r\n\t},\r\n\r\n\tnow: Date.now,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n});\r\n\r\n// Populate the class2type map\r\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n});\r\n\r\nfunction isArraylike( obj ) {\r\n\tvar length = obj.length,\r\n\t\ttype = jQuery.type( obj );\r\n\r\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( obj.nodeType === 1 && length ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\n\r\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n\t// Strict HTML recognition (#11290: must start with <)\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && (match[1] || !context) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[1] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\r\n\r\n\t\t\t\t\t// scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[1],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[2] );\r\n\r\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\r\n\t\t\t\t\t// nodes that are no longer in the document #6963\r\n\t\t\t\t\tif ( elem && elem.parentNode ) {\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t\tthis[0] = elem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.context = document;\r\n\t\t\t\t\tthis.selector = selector;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis.context = this[0] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( jQuery.isFunction( selector ) ) {\r\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\r\n\t\t\t\trootjQuery.ready( selector ) :\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\tif ( selector.selector !== undefined ) {\r\n\t\t\tthis.selector = selector.selector;\r\n\t\t\tthis.context = selector.context;\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\nvar rnotwhite = (/\\S+/g);\r\n\r\n\r\n\r\n// String to Object options format cache\r\nvar optionsCache = {};\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\nfunction createOptions( options ) {\r\n\tvar object = optionsCache[ options ] = {};\r\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t});\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Last fire value (for non-forgettable lists)\r\n\t\tmemory,\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\t\t// Flag to know if list is currently firing\r\n\t\tfiring,\r\n\t\t// First callback to fire (used internally by add and fireWith)\r\n\t\tfiringStart,\r\n\t\t// End of the loop when firing\r\n\t\tfiringLength,\r\n\t\t// Index of currently firing callback (modified by remove if needed)\r\n\t\tfiringIndex,\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\t\t// Stack of fire calls for repeatable lists\r\n\t\tstack = !options.once && [],\r\n\t\t// Fire callbacks\r\n\t\tfire = function( data ) {\r\n\t\t\tmemory = options.memory && data;\r\n\t\t\tfired = true;\r\n\t\t\tfiringIndex = firingStart || 0;\r\n\t\t\tfiringStart = 0;\r\n\t\t\tfiringLength = list.length;\r\n\t\t\tfiring = true;\r\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\r\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\r\n\t\t\t\t\tmemory = false; // To prevent further calls using add\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfiring = false;\r\n\t\t\tif ( list ) {\r\n\t\t\t\tif ( stack ) {\r\n\t\t\t\t\tif ( stack.length ) {\r\n\t\t\t\t\t\tfire( stack.shift() );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.disable();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\t// First, we save the current length\r\n\t\t\t\t\tvar start = list.length;\r\n\t\t\t\t\t(function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\r\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})( arguments );\r\n\t\t\t\t\t// Do we need to add the callbacks to the\r\n\t\t\t\t\t// current firing batch?\r\n\t\t\t\t\tif ( firing ) {\r\n\t\t\t\t\t\tfiringLength = list.length;\r\n\t\t\t\t\t// With memory, if we're not firing then\r\n\t\t\t\t\t// we should call right away\r\n\t\t\t\t\t} else if ( memory ) {\r\n\t\t\t\t\t\tfiringStart = start;\r\n\t\t\t\t\t\tfire( memory );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\t\tvar index;\r\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\t\tlist.splice( index, 1 );\r\n\t\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\t\tif ( firing ) {\r\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\r\n\t\t\t\t\t\t\t\t\tfiringLength--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\r\n\t\t\t},\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tlist = [];\r\n\t\t\t\tfiringLength = 0;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Have the list do nothing anymore\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlist = stack = memory = undefined;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Is it disabled?\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\t\t\t// Lock the list in its current state\r\n\t\t\tlock: function() {\r\n\t\t\t\tstack = undefined;\r\n\t\t\t\tif ( !memory ) {\r\n\t\t\t\t\tself.disable();\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Is it locked?\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !stack;\r\n\t\t\t},\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( list && ( !fired || stack ) ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tif ( firing ) {\r\n\t\t\t\t\t\tstack.push( args );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfire( args );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\njQuery.extend({\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\t\t\t\t// action, add listener, listener list, final state\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\r\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t}).promise();\r\n\t\t\t\t},\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Keep pipe for back-compat\r\n\t\tpromise.pipe = promise.then;\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 3 ];\r\n\r\n\t\t\t// promise[ done | fail | progress ] = list.add\r\n\t\t\tpromise[ tuple[1] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add(function() {\r\n\t\t\t\t\t// state = [ resolved | rejected ]\r\n\t\t\t\t\tstate = stateString;\r\n\r\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\r\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n\t\t\t}\r\n\r\n\t\t\t// deferred[ resolve | reject | notify ]\r\n\t\t\tdeferred[ tuple[0] ] = function() {\r\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\r\n\t\t});\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\r\n\t\tvar i = 0,\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\t\t\tlength = resolveValues.length,\r\n\r\n\t\t\t// the count of uncompleted subordinates\r\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\r\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n\t\t\t// Update function for both resolve and progress values\r\n\t\t\tupdateFunc = function( i, contexts, values ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tcontexts[ i ] = this;\r\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( values === progressValues ) {\r\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\r\n\t\t\t\t\t} else if ( !( --remaining ) ) {\r\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tprogressValues, progressContexts, resolveContexts;\r\n\r\n\t\t// add listeners to Deferred subordinates; treat others as resolved\r\n\t\tif ( length > 1 ) {\r\n\t\t\tprogressValues = new Array( length );\r\n\t\t\tprogressContexts = new Array( length );\r\n\t\t\tresolveContexts = new Array( length );\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n\t\t\t\t\tresolveValues[ i ].promise()\r\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\r\n\t\t\t\t\t\t.fail( deferred.reject )\r\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t--remaining;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if we're not waiting on anything, resolve the master\r\n\t\tif ( !remaining ) {\r\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\r\n\t\t}\r\n\r\n\t\treturn deferred.promise();\r\n\t}\r\n});\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList;\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\t// Add the callback\r\n\tjQuery.ready.promise().done( fn );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend({\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Hold (or release) the ready event\r\n\tholdReady: function( hold ) {\r\n\t\tif ( hold ) {\r\n\t\t\tjQuery.readyWait++;\r\n\t\t} else {\r\n\t\t\tjQuery.ready( true );\r\n\t\t}\r\n\t},\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\r\n\t\t// Trigger any bound ready events\r\n\t\tif ( jQuery.fn.triggerHandler ) {\r\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\r\n\t\t\tjQuery( document ).off( \"ready\" );\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/**\r\n * The ready event handler and self cleanup method\r\n */\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\r\n\twindow.removeEventListener( \"load\", completed, false );\r\n\tjQuery.ready();\r\n}\r\n\r\njQuery.ready.promise = function( obj ) {\r\n\tif ( !readyList ) {\r\n\r\n\t\treadyList = jQuery.Deferred();\r\n\r\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\r\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\r\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\r\n\t\tif ( document.readyState === \"complete\" ) {\r\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\t\t\tsetTimeout( jQuery.ready );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Use the handy event callback\r\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\r\n\r\n\t\t\t// A fallback to window.onload, that will always work\r\n\t\t\twindow.addEventListener( \"load\", completed, false );\r\n\t\t}\r\n\t}\r\n\treturn readyList.promise( obj );\r\n};\r\n\r\n// Kick off the DOM ready check even if the user does not\r\njQuery.ready.promise();\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( jQuery.type( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !jQuery.isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn chainable ?\r\n\t\telems :\r\n\r\n\t\t// Gets\r\n\t\tbulk ?\r\n\t\t\tfn.call( elems ) :\r\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\r\n};\r\n\r\n\r\n/**\r\n * Determines whether an object can have data\r\n */\r\njQuery.acceptData = function( owner ) {\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\t/* jshint -W018 */\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\nfunction Data() {\r\n\t// Support: Android < 4,\r\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\r\n\t// return new empty object instead with no [[set]] accessor\r\n\tObject.defineProperty( this.cache = {}, 0, {\r\n\t\tget: function() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t});\r\n\r\n\tthis.expando = jQuery.expando + Math.random();\r\n}\r\n\r\nData.uid = 1;\r\nData.accepts = jQuery.acceptData;\r\n\r\nData.prototype = {\r\n\tkey: function( owner ) {\r\n\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t// but we should not, see #8335.\r\n\t\t// Always return the key for a frozen object.\r\n\t\tif ( !Data.accepts( owner ) ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar descriptor = {},\r\n\t\t\t// Check if the owner object already has a cache key\r\n\t\t\tunlock = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !unlock ) {\r\n\t\t\tunlock = Data.uid++;\r\n\r\n\t\t\t// Secure it in a non-enumerable, non-writable property\r\n\t\t\ttry {\r\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\r\n\t\t\t\tObject.defineProperties( owner, descriptor );\r\n\r\n\t\t\t// Support: Android < 4\r\n\t\t\t// Fallback to a less secure definition\r\n\t\t\t} catch ( e ) {\r\n\t\t\t\tdescriptor[ this.expando ] = unlock;\r\n\t\t\t\tjQuery.extend( owner, descriptor );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Ensure the cache object\r\n\t\tif ( !this.cache[ unlock ] ) {\r\n\t\t\tthis.cache[ unlock ] = {};\r\n\t\t}\r\n\r\n\t\treturn unlock;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\t// There may be an unlock assigned to this node,\r\n\t\t\t// if there is no entry for this \"owner\", create one inline\r\n\t\t\t// and set the unlock as though an owner entry had always existed\r\n\t\t\tunlock = this.key( owner ),\r\n\t\t\tcache = this.cache[ unlock ];\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ data ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\t\t\t// Fresh assignments by object are shallow copied\r\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\r\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\r\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\r\n\t\t\t} else {\r\n\t\t\t\tfor ( prop in data ) {\r\n\t\t\t\t\tcache[ prop ] = data[ prop ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\t// Either a valid cache is found, or will be created.\r\n\t\t// New caches will be created and the unlock returned,\r\n\t\t// allowing direct access to the newly created\r\n\t\t// empty data object. A valid owner object must be provided.\r\n\t\tvar cache = this.cache[ this.key( owner ) ];\r\n\r\n\t\treturn key === undefined ?\r\n\t\t\tcache : cache[ key ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\t\tvar stored;\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n\t\t\tstored = this.get( owner, key );\r\n\r\n\t\t\treturn stored !== undefined ?\r\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\r\n\t\t}\r\n\r\n\t\t// [*]When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i, name, camel,\r\n\t\t\tunlock = this.key( owner ),\r\n\t\t\tcache = this.cache[ unlock ];\r\n\r\n\t\tif ( key === undefined ) {\r\n\t\t\tthis.cache[ unlock ] = {};\r\n\r\n\t\t} else {\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( jQuery.isArray( key ) ) {\r\n\t\t\t\t// If \"name\" is an array of keys...\r\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\r\n\t\t\t\t// keys will be converted to camelCase.\r\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\r\n\t\t\t\t// both plain key and camelCase key. #12786\r\n\t\t\t\t// This will only penalize the array argument path.\r\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\r\n\t\t\t} else {\r\n\t\t\t\tcamel = jQuery.camelCase( key );\r\n\t\t\t\t// Try the string as a key before any manipulation\r\n\t\t\t\tif ( key in cache ) {\r\n\t\t\t\t\tname = [ key, camel ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\t\tname = camel;\r\n\t\t\t\t\tname = name in cache ?\r\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = name.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ name[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\treturn !jQuery.isEmptyObject(\r\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\r\n\t\t);\r\n\t},\r\n\tdiscard: function( owner ) {\r\n\t\tif ( owner[ this.expando ] ) {\r\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\r\n\t\t}\r\n\t}\r\n};\r\nvar data_priv = new Data();\r\n\r\n\r\n\r\n/*\r\n\tImplementation Summary\r\n\r\n\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n\t2. Improve the module's maintainability by reducing the storage\r\n\t\tpaths to a single mechanism.\r\n\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n*/\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /([A-Z])/g;\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = data === \"true\" ? true :\r\n\t\t\t\t\tdata === \"false\" ? false :\r\n\t\t\t\t\tdata === \"null\" ? null :\r\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\r\n\t\t\t\t\t+data + \"\" === data ? +data :\r\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n\t\t\t\t\tdata;\r\n\t\t\t} catch( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdata_user.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend({\r\n\thasData: function( elem ) {\r\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn data_user.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdata_user.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to data_priv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn data_priv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdata_priv.remove( elem, name );\r\n\t}\r\n});\r\n\r\njQuery.fn.extend({\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = data_user.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE11+\r\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\tdata_user.set( this, key );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data,\r\n\t\t\t\tcamelKey = jQuery.camelCase( key );\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key as-is\r\n\t\t\t\tdata = data_user.get( elem, key );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key camelized\r\n\t\t\t\tdata = data_user.get( elem, camelKey );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tthis.each(function() {\r\n\t\t\t\t// First, attempt to store a copy or reference of any\r\n\t\t\t\t// data that might've been store with a camelCased key.\r\n\t\t\t\tvar data = data_user.get( this, camelKey );\r\n\r\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\r\n\t\t\t\t// store property names with dashes in a camelCase form.\r\n\t\t\t\t// This might not apply to all properties...*\r\n\t\t\t\tdata_user.set( this, camelKey, value );\r\n\r\n\t\t\t\t// *... In the case of properties that might _actually_\r\n\t\t\t\t// have dashes, we need to also store a copy of that\r\n\t\t\t\t// unchanged property.\r\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\r\n\t\t\t\t\tdata_user.set( this, key, value );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each(function() {\r\n\t\t\tdata_user.remove( this, key );\r\n\t\t});\r\n\t}\r\n});\r\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\r\n\r\nvar strundefined = typeof undefined;\r\n\r\n\r\n\r\nvar\r\n\trkeyEvent = /^key/,\r\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\r\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\r\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = data_priv.get( elem );\r\n\r\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n\t\tif ( !elemData ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !(events = elemData.events) ) {\r\n\t\t\tevents = elemData.events = {};\r\n\t\t}\r\n\t\tif ( !(eventHandle = elemData.handle) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\r\n\t\t\ttype = origType = tmp[1];\r\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend({\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join(\".\")\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !(handlers = events[ type ]) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\r\n\r\n\t\tif ( !elemData || !(events = elemData.events) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\r\n\t\t\ttype = origType = tmp[1];\r\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdelete elemData.handle;\r\n\t\t\tdata_priv.remove( elem, \"events\" );\r\n\t\t}\r\n\t},\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\r\n\r\n\t\tcur = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf(\".\") >= 0 ) {\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split(\".\");\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join(\".\");\r\n\t\tevent.namespace_re = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\r\n\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\r\n\t\t\t\tjQuery.acceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\r\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\t\t\t\t\telem[ type ]();\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\tdispatch: function( event ) {\r\n\r\n\t\t// Make a writable jQuery.Event from the native event object\r\n\t\tevent = jQuery.event.fix( event );\r\n\r\n\t\tvar i, j, ret, matched, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\targs = slice.call( arguments ),\r\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[0] = event;\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// Triggered event must either 1) have no namespace, or\r\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\r\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\r\n\t\t\t\t\t\t\t.apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, matches, sel, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Find delegate handlers\r\n\t\t// Black-hole SVG <use> instance trees (#13180)\r\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\r\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\r\n\t\t\t\t\tmatches = [];\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matches[ sel ] ) {\r\n\t\t\t\t\t\t\tmatches.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matches.length ) {\r\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\t// Includes some event props shared by KeyEvent and MouseEvent\r\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\r\n\r\n\tfixHooks: {},\r\n\r\n\tkeyHooks: {\r\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\r\n\t\tfilter: function( event, original ) {\r\n\r\n\t\t\t// Add which for key events\r\n\t\t\tif ( event.which == null ) {\r\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tmouseHooks: {\r\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\r\n\t\tfilter: function( event, original ) {\r\n\t\t\tvar eventDoc, doc, body,\r\n\t\t\t\tbutton = original.button;\r\n\r\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\r\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\r\n\t\t\t\teventDoc = event.target.ownerDocument || document;\r\n\t\t\t\tdoc = eventDoc.documentElement;\r\n\t\t\t\tbody = eventDoc.body;\r\n\r\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n\t\t\t}\r\n\r\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n\t\t\t// Note: button is not normalized, so don't use it\r\n\t\t\tif ( !event.which && button !== undefined ) {\r\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tfix: function( event ) {\r\n\t\tif ( event[ jQuery.expando ] ) {\r\n\t\t\treturn event;\r\n\t\t}\r\n\r\n\t\t// Create a writable copy of the event object and normalize some properties\r\n\t\tvar i, prop, copy,\r\n\t\t\ttype = event.type,\r\n\t\t\toriginalEvent = event,\r\n\t\t\tfixHook = this.fixHooks[ type ];\r\n\r\n\t\tif ( !fixHook ) {\r\n\t\t\tthis.fixHooks[ type ] = fixHook =\r\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\r\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\r\n\t\t\t\t{};\r\n\t\t}\r\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n\t\tevent = new jQuery.Event( originalEvent );\r\n\r\n\t\ti = copy.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tprop = copy[ i ];\r\n\t\t\tevent[ prop ] = originalEvent[ prop ];\r\n\t\t}\r\n\r\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\r\n\t\t// All events should have a target; Cordova deviceready doesn't\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = document;\r\n\t\t}\r\n\r\n\t\t// Support: Safari 6.0+, Chrome < 28\r\n\t\t// Target should not be a text node (#504, #13143)\r\n\t\tif ( event.target.nodeType === 3 ) {\r\n\t\t\tevent.target = event.target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tfocus: {\r\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusin\"\r\n\t\t},\r\n\t\tblur: {\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusout\"\r\n\t\t},\r\n\t\tclick: {\r\n\t\t\t// For checkbox, fire native event so checked state will be right\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\r\n\t\t\t\t\tthis.click();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsimulate: function( type, elem, event, bubble ) {\r\n\t\t// Piggyback on a donor event to simulate a different one.\r\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\r\n\t\t// simulated event prevents default then we do the same on the donor.\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true,\r\n\t\t\t\toriginalEvent: {}\r\n\t\t\t}\r\n\t\t);\r\n\t\tif ( bubble ) {\r\n\t\t\tjQuery.event.trigger( e, null, elem );\r\n\t\t} else {\r\n\t\t\tjQuery.event.dispatch.call( elem, e );\r\n\t\t}\r\n\t\tif ( e.isDefaultPrevented() ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle, false );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !(this instanceof jQuery.Event) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\t\t\t\t// Support: Android < 4.0\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e && e.preventDefault ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && e.stopPropagation ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && e.stopImmediatePropagation ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// Support: Chrome 15+\r\njQuery.each({\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n});\r\n\r\n// Create \"bubbling\" focus and blur events\r\n// Support: Firefox, Chrome, Safari\r\nif ( !support.focusinBubbles ) {\r\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\r\n\t\tvar handler = function( event ) {\r\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\r\n\t\t\t};\r\n\r\n\t\tjQuery.event.special[ fix ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\r\n\t\t\t\t\tdata_priv.remove( doc, fix );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n}\r\n\r\njQuery.fn.extend({\r\n\r\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\r\n\t\tvar origFn, type;\r\n\r\n\t\t// Types can be a map of types/handlers\r\n\t\tif ( typeof types === \"object\" ) {\r\n\t\t\t// ( types-Object, selector, data )\r\n\t\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\t\t// ( types-Object, data )\r\n\t\t\t\tdata = data || selector;\r\n\t\t\t\tselector = undefined;\r\n\t\t\t}\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif ( data == null && fn == null ) {\r\n\t\t\t// ( types, fn )\r\n\t\t\tfn = selector;\r\n\t\t\tdata = selector = undefined;\r\n\t\t} else if ( fn == null ) {\r\n\t\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\t\t// ( types, selector, fn )\r\n\t\t\t\tfn = data;\r\n\t\t\t\tdata = undefined;\r\n\t\t\t} else {\r\n\t\t\t\t// ( types, data, fn )\r\n\t\t\t\tfn = data;\r\n\t\t\t\tdata = selector;\r\n\t\t\t\tselector = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t} else if ( !fn ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif ( one === 1 ) {\r\n\t\t\torigFn = fn;\r\n\t\t\tfn = function( event ) {\r\n\t\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\t\tjQuery().off( event );\r\n\t\t\t\treturn origFn.apply( this, arguments );\r\n\t\t\t};\r\n\t\t\t// Use same guid so caller can remove using origFn\r\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t\t});\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each(function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t});\r\n\t},\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each(function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t});\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[0];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n});\r\nvar nonce = jQuery.now();\r\n\r\nvar rquery = (/\\?/);\r\n\r\n\r\n\r\n// Support: Android 2.3\r\n// Workaround failure to string-cast null input\r\njQuery.parseJSON = function( data ) {\r\n\treturn JSON.parse( data + \"\" );\r\n};\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml, tmp;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE9\r\n\ttry {\r\n\t\ttmp = new DOMParser();\r\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {\r\n\t\txml = undefined;\r\n\t}\r\n\r\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + data );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar\r\n\t// Document location\r\n\tajaxLocParts,\r\n\tajaxLocation,\r\n\r\n\trhash = /#.*$/,\r\n\trts = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\t// #7653, #8125, #8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat(\"*\");\r\n\r\n// #8138, IE may throw an exception when accessing\r\n// a field from window.location if document.domain has been set\r\ntry {\r\n\tajaxLocation = location.href;\r\n} catch( e ) {\r\n\t// Use the href attribute of an A element\r\n\t// since IE will modify it given document.location\r\n\tajaxLocation = document.createElement( \"a\" );\r\n\tajaxLocation.href = \"\";\r\n\tajaxLocation = ajaxLocation.href;\r\n}\r\n\r\n// Segment location into parts\r\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\r\n\r\n\t\tif ( jQuery.isFunction( func ) ) {\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[0] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend({\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: ajaxLocation,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /xml/,\r\n\t\t\thtml: /html/,\r\n\t\t\tjson: /json/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": jQuery.parseJSON,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\t\t\t// Cross-domain detection vars\r\n\t\t\tparts,\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\tjQuery.event,\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\t\t\t// The jqXHR state\r\n\t\t\tstate = 0,\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( state === 2 ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tvar lname = name.toLowerCase();\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\r\n\t\tjqXHR.success = jqXHR.done;\r\n\t\tjqXHR.error = jqXHR.fail;\r\n\r\n\t\t// Remove hash character (#7531: and string promotion)\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\r\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket #12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\r\n\t\t\ts.crossDomain = !!( parts &&\r\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\r\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\r\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( state === 2 ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\tfireGlobals = s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\tcacheURL = s.url;\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// If data is available, append data to url\r\n\t\t\tif ( s.data ) {\r\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\r\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add anti-cache in url if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\ts.url = rts.test( cacheURL ) ?\r\n\r\n\t\t\t\t\t// If there is already a '_' parameter, set its value\r\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\r\n\r\n\t\t\t\t\t// Otherwise add one to the end\r\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\r\n\t\t\tjqXHR[ i ]( s[ i ] );\r\n\t\t}\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = setTimeout(function() {\r\n\t\t\t\t\tjqXHR.abort(\"timeout\");\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tstate = 1;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\t\t\t\t// Propagate exception as error if not done\r\n\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\tdone( -1, e );\r\n\t\t\t\t// Simply rethrow otherwise\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Called once\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// State is \"done\" now\r\n\t\t\tstate = 2;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\tclearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// We extract error from statusText\r\n\t\t\t\t// then normalize statusText and status for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n});\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\t\t// shift arguments if data argument was omitted\r\n\t\tif ( jQuery.isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\treturn jQuery.ajax({\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t});\r\n\t};\r\n});\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n});\r\n\r\n\r\nvar r20 = /%20/g,\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( jQuery.isArray( obj ) ) {\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, value ) {\r\n\t\t\t// If value is a function, invoke it and return its value\r\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n\t\t};\r\n\r\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\r\n\tif ( traditional === undefined ) {\r\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n\t}\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t});\r\n\r\n\t} else {\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\r\n};\r\n\r\njQuery.fn.extend({\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map(function() {\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t})\r\n\t\t.filter(function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t})\r\n\t\t.map(function( i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\treturn val == null ?\r\n\t\t\t\tnull :\r\n\t\t\t\tjQuery.isArray( val ) ?\r\n\t\t\t\t\tjQuery.map( val, function( val ) {\r\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t}).get();\r\n\t}\r\n});\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new XMLHttpRequest();\r\n\t} catch( e ) {}\r\n};\r\n\r\nvar xhrId = 0,\r\n\txhrCallbacks = {},\r\n\txhrSuccessStatus = {\r\n\t\t// file protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\t\t// Support: IE9\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\n// Support: IE9\r\n// Open requests must be manually aborted on unload (#5280)\r\nif ( window.ActiveXObject ) {\r\n\tjQuery( window ).on( \"unload\", function() {\r\n\t\tfor ( var key in xhrCallbacks ) {\r\n\t\t\txhrCallbacks[ key ]();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport(function( options ) {\r\n\tvar callback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr(),\r\n\t\t\t\t\tid = ++xhrId;\r\n\r\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\r\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\r\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\t\t\t\t\t\t\t\t\t// Support: IE9\r\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\r\n\t\t\t\t\t\t\t\t\t// (#11426)\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\r\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\r\n\t\t\t\t\t\t\t\t\t} : undefined,\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\txhr.onerror = callback(\"error\");\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup({\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /(?:java|ecma)script/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n});\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\t// This transport only deals with cross domain requests\r\n\tif ( s.crossDomain ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery(\"<script>\").prop({\r\n\t\t\t\t\tasync: true,\r\n\t\t\t\t\tcharset: s.scriptCharset,\r\n\t\t\t\t\tsrc: s.url\r\n\t\t\t\t}).on(\r\n\t\t\t\t\t\"load error\",\r\n\t\t\t\t\tcallback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup({\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n});\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[\"script json\"] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always(function() {\r\n\t\t\t// Restore preexisting value\r\n\t\t\twindow[ callbackName ] = overwritten;\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\t\t\t\t// make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t});\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n// data: string of html\r\n// context (optional): If specified, the fragment will be created in this context, defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\tcontext = context || document;\r\n\r\n\tvar parsed = rsingleTag.exec( data ),\r\n\t\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[1] ) ];\r\n\t}\r\n\r\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n// Keep a copy of the old load method\r\nvar _load = jQuery.fn.load;\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tif ( typeof url !== \"string\" && _load ) {\r\n\t\treturn _load.apply( this, arguments );\r\n\t}\r\n\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf(\" \");\r\n\r\n\tif ( off >= 0 ) {\r\n\t\tselector = jQuery.trim( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( jQuery.isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax({\r\n\t\t\turl: url,\r\n\r\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\r\n\t\t\ttype: type,\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t}).done(function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t}).complete( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t});\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\njQuery.noConflict = function() {};\r\n\r\n\r\n\r\nreturn jQuery;\r\nreturn jQuery;\r\n}));\r\n\r\n},{}],12:[function(require,module,exports){\r\n\"use strict\";\r\nmodule.exports = function(document) {\r\n  return {\r\n    reload: function() {\r\n      return document.location.reload();\r\n    },\r\n    getHash: function() {\r\n      return document.location.hash;\r\n    },\r\n    setHash: function(newHash) {\r\n      return document.location.hash = newHash;\r\n    },\r\n    changeHref: function(newLocation) {\r\n      return document.location.href = newLocation;\r\n    }\r\n  };\r\n};\r\n\r\n},{}],13:[function(require,module,exports){\r\nvar b64pad, hexcase;\r\n\r\nhexcase = 0;\r\n\r\nb64pad = \"\";\r\n\r\n\r\n/* istanbul ignore next */\r\n\r\nmodule.exports = {\r\n  hex_sha1: function(s) {\r\n    return this.rstr2hex(this.rstr_sha1(this.str2rstr_utf8(s)));\r\n  },\r\n  b64_sha1: function(s) {\r\n    return this.rstr2b64(this.rstr_sha1(this.str2rstr_utf8(s)));\r\n  },\r\n  any_sha1: function(s, e) {\r\n    return this.rstr2any(this.rstr_sha1(this.str2rstr_utf8(s)), e);\r\n  },\r\n  hex_hmac_sha1: function(k, d) {\r\n    return this.rstr2hex(this.rstr_hmac_sha1(this.str2rstr_utf8(k), this.str2rstr_utf8(d)));\r\n  },\r\n  b64_hmac_sha1: function(k, d) {\r\n    return this.rstr2b64(this.rstr_hmac_sha1(this.str2rstr_utf8(k), this.str2rstr_utf8(d)));\r\n  },\r\n  any_hmac_sha1: function(k, d, e) {\r\n    return this.rstr2any(this.rstr_hmac_sha1(this.str2rstr_utf8(k), this.str2rstr_utf8(d)), e);\r\n  },\r\n  sha1_vm_test: function() {\r\n    return thishex_sha1(\"abc\").toLowerCase() === \"a9993e364706816aba3e25717850c26c9cd0d89d\";\r\n  },\r\n  rstr_sha1: function(s) {\r\n    return this.binb2rstr(this.binb_sha1(this.rstr2binb(s), s.length * 8));\r\n  },\r\n  rstr_hmac_sha1: function(key, data) {\r\n    var bkey, hash, i, ipad, opad;\r\n    bkey = this.rstr2binb(key);\r\n    if (bkey.length > 16) {\r\n      bkey = this.binb_sha1(bkey, key.length * 8);\r\n    }\r\n    ipad = Array(16);\r\n    opad = Array(16);\r\n    i = 0;\r\n    while (i < 16) {\r\n      ipad[i] = bkey[i] ^ 0x36363636;\r\n      opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n      i++;\r\n    }\r\n    hash = this.binb_sha1(ipad.concat(this.rstr2binb(data)), 512 + data.length * 8);\r\n    return this.binb2rstr(this.binb_sha1(opad.concat(hash), 512 + 160));\r\n  },\r\n  rstr2hex: function(input) {\r\n    var e, hex_tab, i, output, x;\r\n    try {\r\n      hexcase;\r\n    } catch (_error) {\r\n      e = _error;\r\n      hexcase = 0;\r\n    }\r\n    hex_tab = (hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\");\r\n    output = \"\";\r\n    x = void 0;\r\n    i = 0;\r\n    while (i < input.length) {\r\n      x = input.charCodeAt(i);\r\n      output += hex_tab.charAt((x >>> 4) & 0x0F) + hex_tab.charAt(x & 0x0F);\r\n      i++;\r\n    }\r\n    return output;\r\n  },\r\n  rstr2b64: function(input) {\r\n    var e, i, j, len, output, tab, triplet;\r\n    try {\r\n      b64pad;\r\n    } catch (_error) {\r\n      e = _error;\r\n      b64pad = \"\";\r\n    }\r\n    tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    output = \"\";\r\n    len = input.length;\r\n    i = 0;\r\n    while (i < len) {\r\n      triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\r\n      j = 0;\r\n      while (j < 4) {\r\n        if (i * 8 + j * 6 > input.length * 8) {\r\n          output += b64pad;\r\n        } else {\r\n          output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\r\n        }\r\n        j++;\r\n      }\r\n      i += 3;\r\n    }\r\n    return output;\r\n  },\r\n  rstr2any: function(input, encoding) {\r\n    var dividend, divisor, full_length, i, output, q, quotient, remainders, x;\r\n    divisor = encoding.length;\r\n    remainders = Array();\r\n    i = void 0;\r\n    q = void 0;\r\n    x = void 0;\r\n    quotient = void 0;\r\n    dividend = Array(Math.ceil(input.length / 2));\r\n    i = 0;\r\n    while (i < dividend.length) {\r\n      dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n      i++;\r\n    }\r\n    while (dividend.length > 0) {\r\n      quotient = Array();\r\n      x = 0;\r\n      i = 0;\r\n      while (i < dividend.length) {\r\n        x = (x << 16) + dividend[i];\r\n        q = Math.floor(x / divisor);\r\n        x -= q * divisor;\r\n        if (quotient.length > 0 || q > 0) {\r\n          quotient[quotient.length] = q;\r\n        }\r\n        i++;\r\n      }\r\n      remainders[remainders.length] = x;\r\n      dividend = quotient;\r\n    }\r\n    output = \"\";\r\n    i = remainders.length - 1;\r\n    while (i >= 0) {\r\n      output += encoding.charAt(remainders[i]);\r\n      i--;\r\n    }\r\n    full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\r\n    i = output.length;\r\n    while (i < full_length) {\r\n      output = encoding[0] + output;\r\n      i++;\r\n    }\r\n    return output;\r\n  },\r\n  str2rstr_utf8: function(input) {\r\n    var i, output, x, y;\r\n    output = \"\";\r\n    i = -1;\r\n    x = void 0;\r\n    y = void 0;\r\n    while (++i < input.length) {\r\n      x = input.charCodeAt(i);\r\n      y = (i + 1 < input.length ? input.charCodeAt(i + 1) : 0);\r\n      if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\r\n        x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n        i++;\r\n      }\r\n      if (x <= 0x7F) {\r\n        output += String.fromCharCode(x);\r\n      } else if (x <= 0x7FF) {\r\n        output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F), 0x80 | (x & 0x3F));\r\n      } else if (x <= 0xFFFF) {\r\n        output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));\r\n      } else {\r\n        if (x <= 0x1FFFFF) {\r\n          output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07), 0x80 | ((x >>> 12) & 0x3F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));\r\n        }\r\n      }\r\n    }\r\n    return output;\r\n  },\r\n  str2rstr_utf16le: function(input) {\r\n    var i, output;\r\n    output = \"\";\r\n    i = 0;\r\n    while (i < input.length) {\r\n      output += String.fromCharCode(input.charCodeAt(i) & 0xFF, (input.charCodeAt(i) >>> 8) & 0xFF);\r\n      i++;\r\n    }\r\n    return output;\r\n  },\r\n  str2rstr_utf16be: function(input) {\r\n    var i, output;\r\n    output = \"\";\r\n    i = 0;\r\n    while (i < input.length) {\r\n      output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF, input.charCodeAt(i) & 0xFF);\r\n      i++;\r\n    }\r\n    return output;\r\n  },\r\n  rstr2binb: function(input) {\r\n    var i, output;\r\n    output = Array(input.length >> 2);\r\n    i = 0;\r\n    while (i < output.length) {\r\n      output[i] = 0;\r\n      i++;\r\n    }\r\n    i = 0;\r\n    while (i < input.length * 8) {\r\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\r\n      i += 8;\r\n    }\r\n    return output;\r\n  },\r\n  binb2rstr: function(input) {\r\n    var i, output;\r\n    output = \"\";\r\n    i = 0;\r\n    while (i < input.length * 32) {\r\n      output += String.fromCharCode((input[i >> 5] >>> (24 - i % 32)) & 0xFF);\r\n      i += 8;\r\n    }\r\n    return output;\r\n  },\r\n  binb_sha1: function(x, len) {\r\n    var a, b, c, d, e, i, j, olda, oldb, oldc, oldd, olde, t, w;\r\n    x[len >> 5] |= 0x80 << (24 - len % 32);\r\n    x[((len + 64 >> 9) << 4) + 15] = len;\r\n    w = Array(80);\r\n    a = 1732584193;\r\n    b = -271733879;\r\n    c = -1732584194;\r\n    d = 271733878;\r\n    e = -1009589776;\r\n    i = 0;\r\n    while (i < x.length) {\r\n      olda = a;\r\n      oldb = b;\r\n      oldc = c;\r\n      oldd = d;\r\n      olde = e;\r\n      j = 0;\r\n      while (j < 80) {\r\n        if (j < 16) {\r\n          w[j] = x[i + j];\r\n        } else {\r\n          w[j] = this.bit_rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\r\n        }\r\n        t = this.safe_add(this.safe_add(this.bit_rol(a, 5), this.sha1_ft(j, b, c, d)), this.safe_add(this.safe_add(e, w[j]), this.sha1_kt(j)));\r\n        e = d;\r\n        d = c;\r\n        c = this.bit_rol(b, 30);\r\n        b = a;\r\n        a = t;\r\n        j++;\r\n      }\r\n      a = this.safe_add(a, olda);\r\n      b = this.safe_add(b, oldb);\r\n      c = this.safe_add(c, oldc);\r\n      d = this.safe_add(d, oldd);\r\n      e = this.safe_add(e, olde);\r\n      i += 16;\r\n    }\r\n    return Array(a, b, c, d, e);\r\n  },\r\n  sha1_ft: function(t, b, c, d) {\r\n    if (t < 20) {\r\n      return (b & c) | ((~b) & d);\r\n    }\r\n    if (t < 40) {\r\n      return b ^ c ^ d;\r\n    }\r\n    if (t < 60) {\r\n      return (b & c) | (b & d) | (c & d);\r\n    }\r\n    return b ^ c ^ d;\r\n  },\r\n  sha1_kt: function(t) {\r\n    if (t < 20) {\r\n      return 1518500249;\r\n    } else {\r\n      if (t < 40) {\r\n        return 1859775393;\r\n      } else {\r\n        if (t < 60) {\r\n          return -1894007588;\r\n        } else {\r\n          return -899497514;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  safe_add: function(x, y) {\r\n    var lsw, msw;\r\n    lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n  },\r\n  bit_rol: function(num, cnt) {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n  },\r\n  create_hash: function() {\r\n    var hash;\r\n    hash = this.b64_sha1((new Date()).getTime() + \":\" + Math.floor(Math.random() * 9999999));\r\n    return hash.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=+$/, \"\");\r\n  }\r\n};\r\n\r\n},{}],14:[function(require,module,exports){\r\nmodule.exports = function(document) {\r\n  return {\r\n    getAbsUrl: function(url) {\r\n      var base_url;\r\n      if (url.match(/^.{2,5}:\\/\\//)) {\r\n        return url;\r\n      }\r\n      if (url[0] === \"/\") {\r\n        return document.location.protocol + \"//\" + document.location.host + url;\r\n      }\r\n      base_url = document.location.protocol + \"//\" + document.location.host + document.location.pathname;\r\n      if (base_url[base_url.length - 1] !== \"/\" && url[0] !== \"#\") {\r\n        return base_url + \"/\" + url;\r\n      }\r\n      return base_url + url;\r\n    },\r\n    replaceParam: function(param, rep, rep2) {\r\n      param = param.replace(/\\{\\{(.*?)\\}\\}/g, function(m, v) {\r\n        return rep[v] || \"\";\r\n      });\r\n      if (rep2) {\r\n        param = param.replace(/\\{(.*?)\\}/g, function(m, v) {\r\n          return rep2[v] || \"\";\r\n        });\r\n      }\r\n      return param;\r\n    }\r\n  };\r\n};\r\n\r\n},{}],15:[function(require,module,exports){\r\n// shim for using process in browser\r\n\r\nvar process = module.exports = {};\r\n\r\nprocess.nextTick = (function () {\r\n    var canSetImmediate = typeof window !== 'undefined'\r\n    && window.setImmediate;\r\n    var canPost = typeof window !== 'undefined'\r\n    && window.postMessage && window.addEventListener\r\n    ;\r\n\r\n    if (canSetImmediate) {\r\n        return function (f) { return window.setImmediate(f) };\r\n    }\r\n\r\n    if (canPost) {\r\n        var queue = [];\r\n        window.addEventListener('message', function (ev) {\r\n            var source = ev.source;\r\n            if ((source === window || source === null) && ev.data === 'process-tick') {\r\n                ev.stopPropagation();\r\n                if (queue.length > 0) {\r\n                    var fn = queue.shift();\r\n                    fn();\r\n                }\r\n            }\r\n        }, true);\r\n\r\n        return function nextTick(fn) {\r\n            queue.push(fn);\r\n            window.postMessage('process-tick', '*');\r\n        };\r\n    }\r\n\r\n    return function nextTick(fn) {\r\n        setTimeout(fn, 0);\r\n    };\r\n})();\r\n\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n}\r\n\r\n// TODO(shtylman)\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\n\r\n},{}],16:[function(require,module,exports){\r\n(function (process){\r\n// vim:ts=4:sts=4:sw=4:\r\n/*!\r\n *\r\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\r\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\r\n *\r\n * With parts by Tyler Close\r\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\r\n * at http://www.opensource.org/licenses/mit-license.html\r\n * Forked at ref_send.js version: 2009-05-11\r\n *\r\n * With parts by Mark Miller\r\n * Copyright (C) 2011 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n\r\n(function (definition) {\r\n    \"use strict\";\r\n\r\n    // This file will function properly as a <script> tag, or a module\r\n    // using CommonJS and NodeJS or RequireJS module formats.  In\r\n    // Common/Node/RequireJS, the module exports the Q API and when\r\n    // executed as a simple <script>, it creates a Q global instead.\r\n\r\n    // Montage Require\r\n    if (typeof bootstrap === \"function\") {\r\n        bootstrap(\"promise\", definition);\r\n\r\n    // CommonJS\r\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\r\n        module.exports = definition();\r\n\r\n    // RequireJS\r\n    } else if (typeof define === \"function\" && define.amd) {\r\n        define(definition);\r\n\r\n    // SES (Secure EcmaScript)\r\n    } else if (typeof ses !== \"undefined\") {\r\n        if (!ses.ok()) {\r\n            return;\r\n        } else {\r\n            ses.makeQ = definition;\r\n        }\r\n\r\n    // <script>\r\n    } else if (typeof self !== \"undefined\") {\r\n        self.Q = definition();\r\n\r\n    } else {\r\n        throw new Error(\"This environment was not anticiapted by Q. Please file a bug.\");\r\n    }\r\n\r\n})(function () {\r\n\"use strict\";\r\n\r\nvar hasStacks = false;\r\ntry {\r\n    throw new Error();\r\n} catch (e) {\r\n    hasStacks = !!e.stack;\r\n}\r\n\r\n// All code after this point will be filtered from stack traces reported\r\n// by Q.\r\nvar qStartingLine = captureLine();\r\nvar qFileName;\r\n\r\n// shims\r\n\r\n// used for fallback in \"allResolved\"\r\nvar noop = function () {};\r\n\r\n// Use the fastest possible means to execute a task in a future turn\r\n// of the event loop.\r\nvar nextTick =(function () {\r\n    // linked list of tasks (single, with head node)\r\n    var head = {task: void 0, next: null};\r\n    var tail = head;\r\n    var flushing = false;\r\n    var requestTick = void 0;\r\n    var isNodeJS = false;\r\n\r\n    function flush() {\r\n        /* jshint loopfunc: true */\r\n\r\n        while (head.next) {\r\n            head = head.next;\r\n            var task = head.task;\r\n            head.task = void 0;\r\n            var domain = head.domain;\r\n\r\n            if (domain) {\r\n                head.domain = void 0;\r\n                domain.enter();\r\n            }\r\n\r\n            try {\r\n                task();\r\n\r\n            } catch (e) {\r\n                if (isNodeJS) {\r\n                    // In node, uncaught exceptions are considered fatal errors.\r\n                    // Re-throw them synchronously to interrupt flushing!\r\n\r\n                    // Ensure continuation if the uncaught exception is suppressed\r\n                    // listening \"uncaughtException\" events (as domains does).\r\n                    // Continue in next event to avoid tick recursion.\r\n                    if (domain) {\r\n                        domain.exit();\r\n                    }\r\n                    setTimeout(flush, 0);\r\n                    if (domain) {\r\n                        domain.enter();\r\n                    }\r\n\r\n                    throw e;\r\n\r\n                } else {\r\n                    // In browsers, uncaught exceptions are not fatal.\r\n                    // Re-throw them asynchronously to avoid slow-downs.\r\n                    setTimeout(function() {\r\n                       throw e;\r\n                    }, 0);\r\n                }\r\n            }\r\n\r\n            if (domain) {\r\n                domain.exit();\r\n            }\r\n        }\r\n\r\n        flushing = false;\r\n    }\r\n\r\n    nextTick = function (task) {\r\n        tail = tail.next = {\r\n            task: task,\r\n            domain: isNodeJS && process.domain,\r\n            next: null\r\n        };\r\n\r\n        if (!flushing) {\r\n            flushing = true;\r\n            requestTick();\r\n        }\r\n    };\r\n\r\n    if (typeof process !== \"undefined\" && process.nextTick) {\r\n        // Node.js before 0.9. Note that some fake-Node environments, like the\r\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\r\n        isNodeJS = true;\r\n\r\n        requestTick = function () {\r\n            process.nextTick(flush);\r\n        };\r\n\r\n    } else if (typeof setImmediate === \"function\") {\r\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\r\n        if (typeof window !== \"undefined\") {\r\n            requestTick = setImmediate.bind(window, flush);\r\n        } else {\r\n            requestTick = function () {\r\n                setImmediate(flush);\r\n            };\r\n        }\r\n\r\n    } else if (typeof MessageChannel !== \"undefined\") {\r\n        // modern browsers\r\n        // http://www.nonblocking.io/2011/06/windownexttick.html\r\n        var channel = new MessageChannel();\r\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\r\n        // working message ports the first time a page loads.\r\n        channel.port1.onmessage = function () {\r\n            requestTick = requestPortTick;\r\n            channel.port1.onmessage = flush;\r\n            flush();\r\n        };\r\n        var requestPortTick = function () {\r\n            // Opera requires us to provide a message payload, regardless of\r\n            // whether we use it.\r\n            channel.port2.postMessage(0);\r\n        };\r\n        requestTick = function () {\r\n            setTimeout(flush, 0);\r\n            requestPortTick();\r\n        };\r\n\r\n    } else {\r\n        // old browsers\r\n        requestTick = function () {\r\n            setTimeout(flush, 0);\r\n        };\r\n    }\r\n\r\n    return nextTick;\r\n})();\r\n\r\n// Attempt to make generics safe in the face of downstream\r\n// modifications.\r\n// There is no situation where this is necessary.\r\n// If you need a security guarantee, these primordials need to be\r\n// deeply frozen anyway, and if you don’t need a security guarantee,\r\n// this is just plain paranoid.\r\n// However, this **might** have the nice side-effect of reducing the size of\r\n// the minified code by reducing x.call() to merely x()\r\n// See Mark Miller’s explanation of what this does.\r\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\r\nvar call = Function.call;\r\nfunction uncurryThis(f) {\r\n    return function () {\r\n        return call.apply(f, arguments);\r\n    };\r\n}\r\n// This is equivalent, but slower:\r\n// uncurryThis = Function_bind.bind(Function_bind.call);\r\n// http://jsperf.com/uncurrythis\r\n\r\nvar array_slice = uncurryThis(Array.prototype.slice);\r\n\r\nvar array_reduce = uncurryThis(\r\n    Array.prototype.reduce || function (callback, basis) {\r\n        var index = 0,\r\n            length = this.length;\r\n        // concerning the initial value, if one is not provided\r\n        if (arguments.length === 1) {\r\n            // seek to the first value in the array, accounting\r\n            // for the possibility that is is a sparse array\r\n            do {\r\n                if (index in this) {\r\n                    basis = this[index++];\r\n                    break;\r\n                }\r\n                if (++index >= length) {\r\n                    throw new TypeError();\r\n                }\r\n            } while (1);\r\n        }\r\n        // reduce\r\n        for (; index < length; index++) {\r\n            // account for the possibility that the array is sparse\r\n            if (index in this) {\r\n                basis = callback(basis, this[index], index);\r\n            }\r\n        }\r\n        return basis;\r\n    }\r\n);\r\n\r\nvar array_indexOf = uncurryThis(\r\n    Array.prototype.indexOf || function (value) {\r\n        // not a very good shim, but good enough for our one use of it\r\n        for (var i = 0; i < this.length; i++) {\r\n            if (this[i] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n);\r\n\r\nvar array_map = uncurryThis(\r\n    Array.prototype.map || function (callback, thisp) {\r\n        var self = this;\r\n        var collect = [];\r\n        array_reduce(self, function (undefined, value, index) {\r\n            collect.push(callback.call(thisp, value, index, self));\r\n        }, void 0);\r\n        return collect;\r\n    }\r\n);\r\n\r\nvar object_create = Object.create || function (prototype) {\r\n    function Type() { }\r\n    Type.prototype = prototype;\r\n    return new Type();\r\n};\r\n\r\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\r\n\r\nvar object_keys = Object.keys || function (object) {\r\n    var keys = [];\r\n    for (var key in object) {\r\n        if (object_hasOwnProperty(object, key)) {\r\n            keys.push(key);\r\n        }\r\n    }\r\n    return keys;\r\n};\r\n\r\nvar object_toString = uncurryThis(Object.prototype.toString);\r\n\r\nfunction isObject(value) {\r\n    return value === Object(value);\r\n}\r\n\r\n// generator related shims\r\n\r\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\r\nfunction isStopIteration(exception) {\r\n    return (\r\n        object_toString(exception) === \"[object StopIteration]\" ||\r\n        exception instanceof QReturnValue\r\n    );\r\n}\r\n\r\n// FIXME: Remove this helper and Q.return once ES6 generators are in\r\n// SpiderMonkey.\r\nvar QReturnValue;\r\nif (typeof ReturnValue !== \"undefined\") {\r\n    QReturnValue = ReturnValue;\r\n} else {\r\n    QReturnValue = function (value) {\r\n        this.value = value;\r\n    };\r\n}\r\n\r\n// long stack traces\r\n\r\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\r\n\r\nfunction makeStackTraceLong(error, promise) {\r\n    // If possible, transform the error stack trace by removing Node and Q\r\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\r\n    if (hasStacks &&\r\n        promise.stack &&\r\n        typeof error === \"object\" &&\r\n        error !== null &&\r\n        error.stack &&\r\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\r\n    ) {\r\n        var stacks = [];\r\n        for (var p = promise; !!p; p = p.source) {\r\n            if (p.stack) {\r\n                stacks.unshift(p.stack);\r\n            }\r\n        }\r\n        stacks.unshift(error.stack);\r\n\r\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\r\n        error.stack = filterStackString(concatedStacks);\r\n    }\r\n}\r\n\r\nfunction filterStackString(stackString) {\r\n    var lines = stackString.split(\"\\n\");\r\n    var desiredLines = [];\r\n    for (var i = 0; i < lines.length; ++i) {\r\n        var line = lines[i];\r\n\r\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\r\n            desiredLines.push(line);\r\n        }\r\n    }\r\n    return desiredLines.join(\"\\n\");\r\n}\r\n\r\nfunction isNodeFrame(stackLine) {\r\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\r\n           stackLine.indexOf(\"(node.js:\") !== -1;\r\n}\r\n\r\nfunction getFileNameAndLineNumber(stackLine) {\r\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\r\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\r\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\r\n    if (attempt1) {\r\n        return [attempt1[1], Number(attempt1[2])];\r\n    }\r\n\r\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\r\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\r\n    if (attempt2) {\r\n        return [attempt2[1], Number(attempt2[2])];\r\n    }\r\n\r\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\r\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\r\n    if (attempt3) {\r\n        return [attempt3[1], Number(attempt3[2])];\r\n    }\r\n}\r\n\r\nfunction isInternalFrame(stackLine) {\r\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\r\n\r\n    if (!fileNameAndLineNumber) {\r\n        return false;\r\n    }\r\n\r\n    var fileName = fileNameAndLineNumber[0];\r\n    var lineNumber = fileNameAndLineNumber[1];\r\n\r\n    return fileName === qFileName &&\r\n        lineNumber >= qStartingLine &&\r\n        lineNumber <= qEndingLine;\r\n}\r\n\r\n// discover own file name and line number range for filtering stack\r\n// traces\r\nfunction captureLine() {\r\n    if (!hasStacks) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        throw new Error();\r\n    } catch (e) {\r\n        var lines = e.stack.split(\"\\n\");\r\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\r\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\r\n        if (!fileNameAndLineNumber) {\r\n            return;\r\n        }\r\n\r\n        qFileName = fileNameAndLineNumber[0];\r\n        return fileNameAndLineNumber[1];\r\n    }\r\n}\r\n\r\nfunction deprecate(callback, name, alternative) {\r\n    return function () {\r\n        if (typeof console !== \"undefined\" &&\r\n            typeof console.warn === \"function\") {\r\n            console.warn(name + \" is deprecated, use \" + alternative +\r\n                         \" instead.\", new Error(\"\").stack);\r\n        }\r\n        return callback.apply(callback, arguments);\r\n    };\r\n}\r\n\r\n// end of shims\r\n// beginning of real work\r\n\r\n/**\r\n * Constructs a promise for an immediate reference, passes promises through, or\r\n * coerces promises from different systems.\r\n * @param value immediate reference or promise\r\n */\r\nfunction Q(value) {\r\n    // If the object is already a Promise, return it directly.  This enables\r\n    // the resolve function to both be used to created references from objects,\r\n    // but to tolerably coerce non-promises to promises.\r\n    if (value instanceof Promise) {\r\n        return value;\r\n    }\r\n\r\n    // assimilate thenables\r\n    if (isPromiseAlike(value)) {\r\n        return coerce(value);\r\n    } else {\r\n        return fulfill(value);\r\n    }\r\n}\r\nQ.resolve = Q;\r\n\r\n/**\r\n * Performs a task in a future turn of the event loop.\r\n * @param {Function} task\r\n */\r\nQ.nextTick = nextTick;\r\n\r\n/**\r\n * Controls whether or not long stack traces will be on\r\n */\r\nQ.longStackSupport = false;\r\n\r\n// enable long stacks if Q_DEBUG is set\r\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\r\n    Q.longStackSupport = true;\r\n}\r\n\r\n/**\r\n * Constructs a {promise, resolve, reject} object.\r\n *\r\n * `resolve` is a callback to invoke with a more resolved value for the\r\n * promise. To fulfill the promise, invoke `resolve` with any value that is\r\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\r\n * thenable, or invoke `reject` with the reason directly. To resolve the\r\n * promise to another thenable, thus putting it in the same state, invoke\r\n * `resolve` with that other thenable.\r\n */\r\nQ.defer = defer;\r\nfunction defer() {\r\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\r\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\r\n    // element of the messages array is itself an array of complete arguments to\r\n    // forward to the resolved promise.  We coerce the resolution value to a\r\n    // promise using the `resolve` function because it handles both fully\r\n    // non-thenable values and other thenables gracefully.\r\n    var messages = [], progressListeners = [], resolvedPromise;\r\n\r\n    var deferred = object_create(defer.prototype);\r\n    var promise = object_create(Promise.prototype);\r\n\r\n    promise.promiseDispatch = function (resolve, op, operands) {\r\n        var args = array_slice(arguments);\r\n        if (messages) {\r\n            messages.push(args);\r\n            if (op === \"when\" && operands[1]) { // progress operand\r\n                progressListeners.push(operands[1]);\r\n            }\r\n        } else {\r\n            Q.nextTick(function () {\r\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\r\n            });\r\n        }\r\n    };\r\n\r\n    // XXX deprecated\r\n    promise.valueOf = function () {\r\n        if (messages) {\r\n            return promise;\r\n        }\r\n        var nearerValue = nearer(resolvedPromise);\r\n        if (isPromise(nearerValue)) {\r\n            resolvedPromise = nearerValue; // shorten chain\r\n        }\r\n        return nearerValue;\r\n    };\r\n\r\n    promise.inspect = function () {\r\n        if (!resolvedPromise) {\r\n            return { state: \"pending\" };\r\n        }\r\n        return resolvedPromise.inspect();\r\n    };\r\n\r\n    if (Q.longStackSupport && hasStacks) {\r\n        try {\r\n            throw new Error();\r\n        } catch (e) {\r\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\r\n            // accessor around; that causes memory leaks as per GH-111. Just\r\n            // reify the stack trace as a string ASAP.\r\n            //\r\n            // At the same time, cut off the first line; it's always just\r\n            // \"[object Promise]\\n\", as per the `toString`.\r\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\r\n        }\r\n    }\r\n\r\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\r\n    // consolidating them into `become`, since otherwise we'd create new\r\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\r\n\r\n    function become(newPromise) {\r\n        resolvedPromise = newPromise;\r\n        promise.source = newPromise;\r\n\r\n        array_reduce(messages, function (undefined, message) {\r\n            Q.nextTick(function () {\r\n                newPromise.promiseDispatch.apply(newPromise, message);\r\n            });\r\n        }, void 0);\r\n\r\n        messages = void 0;\r\n        progressListeners = void 0;\r\n    }\r\n\r\n    deferred.promise = promise;\r\n    deferred.resolve = function (value) {\r\n        if (resolvedPromise) {\r\n            return;\r\n        }\r\n\r\n        become(Q(value));\r\n    };\r\n\r\n    deferred.fulfill = function (value) {\r\n        if (resolvedPromise) {\r\n            return;\r\n        }\r\n\r\n        become(fulfill(value));\r\n    };\r\n    deferred.reject = function (reason) {\r\n        if (resolvedPromise) {\r\n            return;\r\n        }\r\n\r\n        become(reject(reason));\r\n    };\r\n    deferred.notify = function (progress) {\r\n        if (resolvedPromise) {\r\n            return;\r\n        }\r\n\r\n        array_reduce(progressListeners, function (undefined, progressListener) {\r\n            Q.nextTick(function () {\r\n                progressListener(progress);\r\n            });\r\n        }, void 0);\r\n    };\r\n\r\n    return deferred;\r\n}\r\n\r\n/**\r\n * Creates a Node-style callback that will resolve or reject the deferred\r\n * promise.\r\n * @returns a nodeback\r\n */\r\ndefer.prototype.makeNodeResolver = function () {\r\n    var self = this;\r\n    return function (error, value) {\r\n        if (error) {\r\n            self.reject(error);\r\n        } else if (arguments.length > 2) {\r\n            self.resolve(array_slice(arguments, 1));\r\n        } else {\r\n            self.resolve(value);\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * @param resolver {Function} a function that returns nothing and accepts\r\n * the resolve, reject, and notify functions for a deferred.\r\n * @returns a promise that may be resolved with the given resolve and reject\r\n * functions, or rejected by a thrown exception in resolver\r\n */\r\nQ.Promise = promise; // ES6\r\nQ.promise = promise;\r\nfunction promise(resolver) {\r\n    if (typeof resolver !== \"function\") {\r\n        throw new TypeError(\"resolver must be a function.\");\r\n    }\r\n    var deferred = defer();\r\n    try {\r\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\r\n    } catch (reason) {\r\n        deferred.reject(reason);\r\n    }\r\n    return deferred.promise;\r\n}\r\n\r\npromise.race = race; // ES6\r\npromise.all = all; // ES6\r\npromise.reject = reject; // ES6\r\npromise.resolve = Q; // ES6\r\n\r\n// XXX experimental.  This method is a way to denote that a local value is\r\n// serializable and should be immediately dispatched to a remote upon request,\r\n// instead of passing a reference.\r\nQ.passByCopy = function (object) {\r\n    //freeze(object);\r\n    //passByCopies.set(object, true);\r\n    return object;\r\n};\r\n\r\nPromise.prototype.passByCopy = function () {\r\n    //freeze(object);\r\n    //passByCopies.set(object, true);\r\n    return this;\r\n};\r\n\r\n/**\r\n * If two promises eventually fulfill to the same value, promises that value,\r\n * but otherwise rejects.\r\n * @param x {Any*}\r\n * @param y {Any*}\r\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\r\n * otherwise.\r\n *\r\n */\r\nQ.join = function (x, y) {\r\n    return Q(x).join(y);\r\n};\r\n\r\nPromise.prototype.join = function (that) {\r\n    return Q([this, that]).spread(function (x, y) {\r\n        if (x === y) {\r\n            // TODO: \"===\" should be Object.is or equiv\r\n            return x;\r\n        } else {\r\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Returns a promise for the first of an array of promises to become settled.\r\n * @param answers {Array[Any*]} promises to race\r\n * @returns {Any*} the first promise to be settled\r\n */\r\nQ.race = race;\r\nfunction race(answerPs) {\r\n    return promise(function(resolve, reject) {\r\n        // Switch to this once we can assume at least ES5\r\n        // answerPs.forEach(function(answerP) {\r\n        //     Q(answerP).then(resolve, reject);\r\n        // });\r\n        // Use this in the meantime\r\n        for (var i = 0, len = answerPs.length; i < len; i++) {\r\n            Q(answerPs[i]).then(resolve, reject);\r\n        }\r\n    });\r\n}\r\n\r\nPromise.prototype.race = function () {\r\n    return this.then(Q.race);\r\n};\r\n\r\n/**\r\n * Constructs a Promise with a promise descriptor object and optional fallback\r\n * function.  The descriptor contains methods like when(rejected), get(name),\r\n * set(name, value), post(name, args), and delete(name), which all\r\n * return either a value, a promise for a value, or a rejection.  The fallback\r\n * accepts the operation name, a resolver, and any further arguments that would\r\n * have been forwarded to the appropriate method above had a method been\r\n * provided with the proper name.  The API makes no guarantees about the nature\r\n * of the returned object, apart from that it is usable whereever promises are\r\n * bought and sold.\r\n */\r\nQ.makePromise = Promise;\r\nfunction Promise(descriptor, fallback, inspect) {\r\n    if (fallback === void 0) {\r\n        fallback = function (op) {\r\n            return reject(new Error(\r\n                \"Promise does not support operation: \" + op\r\n            ));\r\n        };\r\n    }\r\n    if (inspect === void 0) {\r\n        inspect = function () {\r\n            return {state: \"unknown\"};\r\n        };\r\n    }\r\n\r\n    var promise = object_create(Promise.prototype);\r\n\r\n    promise.promiseDispatch = function (resolve, op, args) {\r\n        var result;\r\n        try {\r\n            if (descriptor[op]) {\r\n                result = descriptor[op].apply(promise, args);\r\n            } else {\r\n                result = fallback.call(promise, op, args);\r\n            }\r\n        } catch (exception) {\r\n            result = reject(exception);\r\n        }\r\n        if (resolve) {\r\n            resolve(result);\r\n        }\r\n    };\r\n\r\n    promise.inspect = inspect;\r\n\r\n    // XXX deprecated `valueOf` and `exception` support\r\n    if (inspect) {\r\n        var inspected = inspect();\r\n        if (inspected.state === \"rejected\") {\r\n            promise.exception = inspected.reason;\r\n        }\r\n\r\n        promise.valueOf = function () {\r\n            var inspected = inspect();\r\n            if (inspected.state === \"pending\" ||\r\n                inspected.state === \"rejected\") {\r\n                return promise;\r\n            }\r\n            return inspected.value;\r\n        };\r\n    }\r\n\r\n    return promise;\r\n}\r\n\r\nPromise.prototype.toString = function () {\r\n    return \"[object Promise]\";\r\n};\r\n\r\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\r\n    var self = this;\r\n    var deferred = defer();\r\n    var done = false;   // ensure the untrusted promise makes at most a\r\n                        // single call to one of the callbacks\r\n\r\n    function _fulfilled(value) {\r\n        try {\r\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\r\n        } catch (exception) {\r\n            return reject(exception);\r\n        }\r\n    }\r\n\r\n    function _rejected(exception) {\r\n        if (typeof rejected === \"function\") {\r\n            makeStackTraceLong(exception, self);\r\n            try {\r\n                return rejected(exception);\r\n            } catch (newException) {\r\n                return reject(newException);\r\n            }\r\n        }\r\n        return reject(exception);\r\n    }\r\n\r\n    function _progressed(value) {\r\n        return typeof progressed === \"function\" ? progressed(value) : value;\r\n    }\r\n\r\n    Q.nextTick(function () {\r\n        self.promiseDispatch(function (value) {\r\n            if (done) {\r\n                return;\r\n            }\r\n            done = true;\r\n\r\n            deferred.resolve(_fulfilled(value));\r\n        }, \"when\", [function (exception) {\r\n            if (done) {\r\n                return;\r\n            }\r\n            done = true;\r\n\r\n            deferred.resolve(_rejected(exception));\r\n        }]);\r\n    });\r\n\r\n    // Progress propagator need to be attached in the current tick.\r\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\r\n        var newValue;\r\n        var threw = false;\r\n        try {\r\n            newValue = _progressed(value);\r\n        } catch (e) {\r\n            threw = true;\r\n            if (Q.onerror) {\r\n                Q.onerror(e);\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        if (!threw) {\r\n            deferred.notify(newValue);\r\n        }\r\n    }]);\r\n\r\n    return deferred.promise;\r\n};\r\n\r\nQ.tap = function (promise, callback) {\r\n    return Q(promise).tap(callback);\r\n};\r\n\r\n/**\r\n * Works almost like \"finally\", but not called for rejections.\r\n * Original resolution value is passed through callback unaffected.\r\n * Callback may return a promise that will be awaited for.\r\n * @param {Function} callback\r\n * @returns {Q.Promise}\r\n * @example\r\n * doSomething()\r\n *   .then(...)\r\n *   .tap(console.log)\r\n *   .then(...);\r\n */\r\nPromise.prototype.tap = function (callback) {\r\n    callback = Q(callback);\r\n\r\n    return this.then(function (value) {\r\n        return callback.fcall(value).thenResolve(value);\r\n    });\r\n};\r\n\r\n/**\r\n * Registers an observer on a promise.\r\n *\r\n * Guarantees:\r\n *\r\n * 1. that fulfilled and rejected will be called only once.\r\n * 2. that either the fulfilled callback or the rejected callback will be\r\n *    called, but not both.\r\n * 3. that fulfilled and rejected will not be called in this turn.\r\n *\r\n * @param value      promise or immediate reference to observe\r\n * @param fulfilled  function to be called with the fulfilled value\r\n * @param rejected   function to be called with the rejection exception\r\n * @param progressed function to be called on any progress notifications\r\n * @return promise for the return value from the invoked callback\r\n */\r\nQ.when = when;\r\nfunction when(value, fulfilled, rejected, progressed) {\r\n    return Q(value).then(fulfilled, rejected, progressed);\r\n}\r\n\r\nPromise.prototype.thenResolve = function (value) {\r\n    return this.then(function () { return value; });\r\n};\r\n\r\nQ.thenResolve = function (promise, value) {\r\n    return Q(promise).thenResolve(value);\r\n};\r\n\r\nPromise.prototype.thenReject = function (reason) {\r\n    return this.then(function () { throw reason; });\r\n};\r\n\r\nQ.thenReject = function (promise, reason) {\r\n    return Q(promise).thenReject(reason);\r\n};\r\n\r\n/**\r\n * If an object is not a promise, it is as \"near\" as possible.\r\n * If a promise is rejected, it is as \"near\" as possible too.\r\n * If it’s a fulfilled promise, the fulfillment value is nearer.\r\n * If it’s a deferred promise and the deferred has been resolved, the\r\n * resolution is \"nearer\".\r\n * @param object\r\n * @returns most resolved (nearest) form of the object\r\n */\r\n\r\n// XXX should we re-do this?\r\nQ.nearer = nearer;\r\nfunction nearer(value) {\r\n    if (isPromise(value)) {\r\n        var inspected = value.inspect();\r\n        if (inspected.state === \"fulfilled\") {\r\n            return inspected.value;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\n/**\r\n * @returns whether the given object is a promise.\r\n * Otherwise it is a fulfilled value.\r\n */\r\nQ.isPromise = isPromise;\r\nfunction isPromise(object) {\r\n    return object instanceof Promise;\r\n}\r\n\r\nQ.isPromiseAlike = isPromiseAlike;\r\nfunction isPromiseAlike(object) {\r\n    return isObject(object) && typeof object.then === \"function\";\r\n}\r\n\r\n/**\r\n * @returns whether the given object is a pending promise, meaning not\r\n * fulfilled or rejected.\r\n */\r\nQ.isPending = isPending;\r\nfunction isPending(object) {\r\n    return isPromise(object) && object.inspect().state === \"pending\";\r\n}\r\n\r\nPromise.prototype.isPending = function () {\r\n    return this.inspect().state === \"pending\";\r\n};\r\n\r\n/**\r\n * @returns whether the given object is a value or fulfilled\r\n * promise.\r\n */\r\nQ.isFulfilled = isFulfilled;\r\nfunction isFulfilled(object) {\r\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\r\n}\r\n\r\nPromise.prototype.isFulfilled = function () {\r\n    return this.inspect().state === \"fulfilled\";\r\n};\r\n\r\n/**\r\n * @returns whether the given object is a rejected promise.\r\n */\r\nQ.isRejected = isRejected;\r\nfunction isRejected(object) {\r\n    return isPromise(object) && object.inspect().state === \"rejected\";\r\n}\r\n\r\nPromise.prototype.isRejected = function () {\r\n    return this.inspect().state === \"rejected\";\r\n};\r\n\r\n//// BEGIN UNHANDLED REJECTION TRACKING\r\n\r\n// This promise library consumes exceptions thrown in handlers so they can be\r\n// handled by a subsequent promise.  The exceptions get added to this array when\r\n// they are created, and removed when they are handled.  Note that in ES6 or\r\n// shimmed environments, this would naturally be a `Set`.\r\nvar unhandledReasons = [];\r\nvar unhandledRejections = [];\r\nvar trackUnhandledRejections = true;\r\n\r\nfunction resetUnhandledRejections() {\r\n    unhandledReasons.length = 0;\r\n    unhandledRejections.length = 0;\r\n\r\n    if (!trackUnhandledRejections) {\r\n        trackUnhandledRejections = true;\r\n    }\r\n}\r\n\r\nfunction trackRejection(promise, reason) {\r\n    if (!trackUnhandledRejections) {\r\n        return;\r\n    }\r\n\r\n    unhandledRejections.push(promise);\r\n    if (reason && typeof reason.stack !== \"undefined\") {\r\n        unhandledReasons.push(reason.stack);\r\n    } else {\r\n        unhandledReasons.push(\"(no stack) \" + reason);\r\n    }\r\n}\r\n\r\nfunction untrackRejection(promise) {\r\n    if (!trackUnhandledRejections) {\r\n        return;\r\n    }\r\n\r\n    var at = array_indexOf(unhandledRejections, promise);\r\n    if (at !== -1) {\r\n        unhandledRejections.splice(at, 1);\r\n        unhandledReasons.splice(at, 1);\r\n    }\r\n}\r\n\r\nQ.resetUnhandledRejections = resetUnhandledRejections;\r\n\r\nQ.getUnhandledReasons = function () {\r\n    // Make a copy so that consumers can't interfere with our internal state.\r\n    return unhandledReasons.slice();\r\n};\r\n\r\nQ.stopUnhandledRejectionTracking = function () {\r\n    resetUnhandledRejections();\r\n    trackUnhandledRejections = false;\r\n};\r\n\r\nresetUnhandledRejections();\r\n\r\n//// END UNHANDLED REJECTION TRACKING\r\n\r\n/**\r\n * Constructs a rejected promise.\r\n * @param reason value describing the failure\r\n */\r\nQ.reject = reject;\r\nfunction reject(reason) {\r\n    var rejection = Promise({\r\n        \"when\": function (rejected) {\r\n            // note that the error has been handled\r\n            if (rejected) {\r\n                untrackRejection(this);\r\n            }\r\n            return rejected ? rejected(reason) : this;\r\n        }\r\n    }, function fallback() {\r\n        return this;\r\n    }, function inspect() {\r\n        return { state: \"rejected\", reason: reason };\r\n    });\r\n\r\n    // Note that the reason has not been handled.\r\n    trackRejection(rejection, reason);\r\n\r\n    return rejection;\r\n}\r\n\r\n/**\r\n * Constructs a fulfilled promise for an immediate reference.\r\n * @param value immediate reference\r\n */\r\nQ.fulfill = fulfill;\r\nfunction fulfill(value) {\r\n    return Promise({\r\n        \"when\": function () {\r\n            return value;\r\n        },\r\n        \"get\": function (name) {\r\n            return value[name];\r\n        },\r\n        \"set\": function (name, rhs) {\r\n            value[name] = rhs;\r\n        },\r\n        \"delete\": function (name) {\r\n            delete value[name];\r\n        },\r\n        \"post\": function (name, args) {\r\n            // Mark Miller proposes that post with no name should apply a\r\n            // promised function.\r\n            if (name === null || name === void 0) {\r\n                return value.apply(void 0, args);\r\n            } else {\r\n                return value[name].apply(value, args);\r\n            }\r\n        },\r\n        \"apply\": function (thisp, args) {\r\n            return value.apply(thisp, args);\r\n        },\r\n        \"keys\": function () {\r\n            return object_keys(value);\r\n        }\r\n    }, void 0, function inspect() {\r\n        return { state: \"fulfilled\", value: value };\r\n    });\r\n}\r\n\r\n/**\r\n * Converts thenables to Q promises.\r\n * @param promise thenable promise\r\n * @returns a Q promise\r\n */\r\nfunction coerce(promise) {\r\n    var deferred = defer();\r\n    Q.nextTick(function () {\r\n        try {\r\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\r\n        } catch (exception) {\r\n            deferred.reject(exception);\r\n        }\r\n    });\r\n    return deferred.promise;\r\n}\r\n\r\n/**\r\n * Annotates an object such that it will never be\r\n * transferred away from this process over any promise\r\n * communication channel.\r\n * @param object\r\n * @returns promise a wrapping of that object that\r\n * additionally responds to the \"isDef\" message\r\n * without a rejection.\r\n */\r\nQ.master = master;\r\nfunction master(object) {\r\n    return Promise({\r\n        \"isDef\": function () {}\r\n    }, function fallback(op, args) {\r\n        return dispatch(object, op, args);\r\n    }, function () {\r\n        return Q(object).inspect();\r\n    });\r\n}\r\n\r\n/**\r\n * Spreads the values of a promised array of arguments into the\r\n * fulfillment callback.\r\n * @param fulfilled callback that receives variadic arguments from the\r\n * promised array\r\n * @param rejected callback that receives the exception if the promise\r\n * is rejected.\r\n * @returns a promise for the return value or thrown exception of\r\n * either callback.\r\n */\r\nQ.spread = spread;\r\nfunction spread(value, fulfilled, rejected) {\r\n    return Q(value).spread(fulfilled, rejected);\r\n}\r\n\r\nPromise.prototype.spread = function (fulfilled, rejected) {\r\n    return this.all().then(function (array) {\r\n        return fulfilled.apply(void 0, array);\r\n    }, rejected);\r\n};\r\n\r\n/**\r\n * The async function is a decorator for generator functions, turning\r\n * them into asynchronous generators.  Although generators are only part\r\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\r\n * errors in older engines.  This code should continue to work and will\r\n * in fact improve over time as the language improves.\r\n *\r\n * ES6 generators are currently part of V8 version 3.19 with the\r\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\r\n * for longer, but under an older Python-inspired form.  This function\r\n * works on both kinds of generators.\r\n *\r\n * Decorates a generator function such that:\r\n *  - it may yield promises\r\n *  - execution will continue when that promise is fulfilled\r\n *  - the value of the yield expression will be the fulfilled value\r\n *  - it returns a promise for the return value (when the generator\r\n *    stops iterating)\r\n *  - the decorated function returns a promise for the return value\r\n *    of the generator or the first rejected promise among those\r\n *    yielded.\r\n *  - if an error is thrown in the generator, it propagates through\r\n *    every following yield until it is caught, or until it escapes\r\n *    the generator function altogether, and is translated into a\r\n *    rejection for the promise returned by the decorated generator.\r\n */\r\nQ.async = async;\r\nfunction async(makeGenerator) {\r\n    return function () {\r\n        // when verb is \"send\", arg is a value\r\n        // when verb is \"throw\", arg is an exception\r\n        function continuer(verb, arg) {\r\n            var result;\r\n\r\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\r\n            // engine that has a deployed base of browsers that support generators.\r\n            // However, SM's generators use the Python-inspired semantics of\r\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\r\n            // like to make it possible to use generators in deployed browsers, so\r\n            // we also support Python-style generators.  At some point we can remove\r\n            // this block.\r\n\r\n            if (typeof StopIteration === \"undefined\") {\r\n                // ES6 Generators\r\n                try {\r\n                    result = generator[verb](arg);\r\n                } catch (exception) {\r\n                    return reject(exception);\r\n                }\r\n                if (result.done) {\r\n                    return Q(result.value);\r\n                } else {\r\n                    return when(result.value, callback, errback);\r\n                }\r\n            } else {\r\n                // SpiderMonkey Generators\r\n                // FIXME: Remove this case when SM does ES6 generators.\r\n                try {\r\n                    result = generator[verb](arg);\r\n                } catch (exception) {\r\n                    if (isStopIteration(exception)) {\r\n                        return Q(exception.value);\r\n                    } else {\r\n                        return reject(exception);\r\n                    }\r\n                }\r\n                return when(result, callback, errback);\r\n            }\r\n        }\r\n        var generator = makeGenerator.apply(this, arguments);\r\n        var callback = continuer.bind(continuer, \"next\");\r\n        var errback = continuer.bind(continuer, \"throw\");\r\n        return callback();\r\n    };\r\n}\r\n\r\n/**\r\n * The spawn function is a small wrapper around async that immediately\r\n * calls the generator and also ends the promise chain, so that any\r\n * unhandled errors are thrown instead of forwarded to the error\r\n * handler. This is useful because it's extremely common to run\r\n * generators at the top-level to work with libraries.\r\n */\r\nQ.spawn = spawn;\r\nfunction spawn(makeGenerator) {\r\n    Q.done(Q.async(makeGenerator)());\r\n}\r\n\r\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\r\n/**\r\n * Throws a ReturnValue exception to stop an asynchronous generator.\r\n *\r\n * This interface is a stop-gap measure to support generator return\r\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\r\n * generators like Chromium 29, just use \"return\" in your generator\r\n * functions.\r\n *\r\n * @param value the return value for the surrounding generator\r\n * @throws ReturnValue exception with the value.\r\n * @example\r\n * // ES6 style\r\n * Q.async(function* () {\r\n *      var foo = yield getFooPromise();\r\n *      var bar = yield getBarPromise();\r\n *      return foo + bar;\r\n * })\r\n * // Older SpiderMonkey style\r\n * Q.async(function () {\r\n *      var foo = yield getFooPromise();\r\n *      var bar = yield getBarPromise();\r\n *      Q.return(foo + bar);\r\n * })\r\n */\r\nQ[\"return\"] = _return;\r\nfunction _return(value) {\r\n    throw new QReturnValue(value);\r\n}\r\n\r\n/**\r\n * The promised function decorator ensures that any promise arguments\r\n * are settled and passed as values (`this` is also settled and passed\r\n * as a value).  It will also ensure that the result of a function is\r\n * always a promise.\r\n *\r\n * @example\r\n * var add = Q.promised(function (a, b) {\r\n *     return a + b;\r\n * });\r\n * add(Q(a), Q(B));\r\n *\r\n * @param {function} callback The function to decorate\r\n * @returns {function} a function that has been decorated.\r\n */\r\nQ.promised = promised;\r\nfunction promised(callback) {\r\n    return function () {\r\n        return spread([this, all(arguments)], function (self, args) {\r\n            return callback.apply(self, args);\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * sends a message to a value in a future turn\r\n * @param object* the recipient\r\n * @param op the name of the message operation, e.g., \"when\",\r\n * @param args further arguments to be forwarded to the operation\r\n * @returns result {Promise} a promise for the result of the operation\r\n */\r\nQ.dispatch = dispatch;\r\nfunction dispatch(object, op, args) {\r\n    return Q(object).dispatch(op, args);\r\n}\r\n\r\nPromise.prototype.dispatch = function (op, args) {\r\n    var self = this;\r\n    var deferred = defer();\r\n    Q.nextTick(function () {\r\n        self.promiseDispatch(deferred.resolve, op, args);\r\n    });\r\n    return deferred.promise;\r\n};\r\n\r\n/**\r\n * Gets the value of a property in a future turn.\r\n * @param object    promise or immediate reference for target object\r\n * @param name      name of property to get\r\n * @return promise for the property value\r\n */\r\nQ.get = function (object, key) {\r\n    return Q(object).dispatch(\"get\", [key]);\r\n};\r\n\r\nPromise.prototype.get = function (key) {\r\n    return this.dispatch(\"get\", [key]);\r\n};\r\n\r\n/**\r\n * Sets the value of a property in a future turn.\r\n * @param object    promise or immediate reference for object object\r\n * @param name      name of property to set\r\n * @param value     new value of property\r\n * @return promise for the return value\r\n */\r\nQ.set = function (object, key, value) {\r\n    return Q(object).dispatch(\"set\", [key, value]);\r\n};\r\n\r\nPromise.prototype.set = function (key, value) {\r\n    return this.dispatch(\"set\", [key, value]);\r\n};\r\n\r\n/**\r\n * Deletes a property in a future turn.\r\n * @param object    promise or immediate reference for target object\r\n * @param name      name of property to delete\r\n * @return promise for the return value\r\n */\r\nQ.del = // XXX legacy\r\nQ[\"delete\"] = function (object, key) {\r\n    return Q(object).dispatch(\"delete\", [key]);\r\n};\r\n\r\nPromise.prototype.del = // XXX legacy\r\nPromise.prototype[\"delete\"] = function (key) {\r\n    return this.dispatch(\"delete\", [key]);\r\n};\r\n\r\n/**\r\n * Invokes a method in a future turn.\r\n * @param object    promise or immediate reference for target object\r\n * @param name      name of method to invoke\r\n * @param value     a value to post, typically an array of\r\n *                  invocation arguments for promises that\r\n *                  are ultimately backed with `resolve` values,\r\n *                  as opposed to those backed with URLs\r\n *                  wherein the posted value can be any\r\n *                  JSON serializable object.\r\n * @return promise for the return value\r\n */\r\n// bound locally because it is used by other methods\r\nQ.mapply = // XXX As proposed by \"Redsandro\"\r\nQ.post = function (object, name, args) {\r\n    return Q(object).dispatch(\"post\", [name, args]);\r\n};\r\n\r\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\r\nPromise.prototype.post = function (name, args) {\r\n    return this.dispatch(\"post\", [name, args]);\r\n};\r\n\r\n/**\r\n * Invokes a method in a future turn.\r\n * @param object    promise or immediate reference for target object\r\n * @param name      name of method to invoke\r\n * @param ...args   array of invocation arguments\r\n * @return promise for the return value\r\n */\r\nQ.send = // XXX Mark Miller's proposed parlance\r\nQ.mcall = // XXX As proposed by \"Redsandro\"\r\nQ.invoke = function (object, name /*...args*/) {\r\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\r\n};\r\n\r\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\r\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\r\nPromise.prototype.invoke = function (name /*...args*/) {\r\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\r\n};\r\n\r\n/**\r\n * Applies the promised function in a future turn.\r\n * @param object    promise or immediate reference for target function\r\n * @param args      array of application arguments\r\n */\r\nQ.fapply = function (object, args) {\r\n    return Q(object).dispatch(\"apply\", [void 0, args]);\r\n};\r\n\r\nPromise.prototype.fapply = function (args) {\r\n    return this.dispatch(\"apply\", [void 0, args]);\r\n};\r\n\r\n/**\r\n * Calls the promised function in a future turn.\r\n * @param object    promise or immediate reference for target function\r\n * @param ...args   array of application arguments\r\n */\r\nQ[\"try\"] =\r\nQ.fcall = function (object /* ...args*/) {\r\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\r\n};\r\n\r\nPromise.prototype.fcall = function (/*...args*/) {\r\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\r\n};\r\n\r\n/**\r\n * Binds the promised function, transforming return values into a fulfilled\r\n * promise and thrown errors into a rejected one.\r\n * @param object    promise or immediate reference for target function\r\n * @param ...args   array of application arguments\r\n */\r\nQ.fbind = function (object /*...args*/) {\r\n    var promise = Q(object);\r\n    var args = array_slice(arguments, 1);\r\n    return function fbound() {\r\n        return promise.dispatch(\"apply\", [\r\n            this,\r\n            args.concat(array_slice(arguments))\r\n        ]);\r\n    };\r\n};\r\nPromise.prototype.fbind = function (/*...args*/) {\r\n    var promise = this;\r\n    var args = array_slice(arguments);\r\n    return function fbound() {\r\n        return promise.dispatch(\"apply\", [\r\n            this,\r\n            args.concat(array_slice(arguments))\r\n        ]);\r\n    };\r\n};\r\n\r\n/**\r\n * Requests the names of the owned properties of a promised\r\n * object in a future turn.\r\n * @param object    promise or immediate reference for target object\r\n * @return promise for the keys of the eventually settled object\r\n */\r\nQ.keys = function (object) {\r\n    return Q(object).dispatch(\"keys\", []);\r\n};\r\n\r\nPromise.prototype.keys = function () {\r\n    return this.dispatch(\"keys\", []);\r\n};\r\n\r\n/**\r\n * Turns an array of promises into a promise for an array.  If any of\r\n * the promises gets rejected, the whole array is rejected immediately.\r\n * @param {Array*} an array (or promise for an array) of values (or\r\n * promises for values)\r\n * @returns a promise for an array of the corresponding values\r\n */\r\n// By Mark Miller\r\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\r\nQ.all = all;\r\nfunction all(promises) {\r\n    return when(promises, function (promises) {\r\n        var countDown = 0;\r\n        var deferred = defer();\r\n        array_reduce(promises, function (undefined, promise, index) {\r\n            var snapshot;\r\n            if (\r\n                isPromise(promise) &&\r\n                (snapshot = promise.inspect()).state === \"fulfilled\"\r\n            ) {\r\n                promises[index] = snapshot.value;\r\n            } else {\r\n                ++countDown;\r\n                when(\r\n                    promise,\r\n                    function (value) {\r\n                        promises[index] = value;\r\n                        if (--countDown === 0) {\r\n                            deferred.resolve(promises);\r\n                        }\r\n                    },\r\n                    deferred.reject,\r\n                    function (progress) {\r\n                        deferred.notify({ index: index, value: progress });\r\n                    }\r\n                );\r\n            }\r\n        }, void 0);\r\n        if (countDown === 0) {\r\n            deferred.resolve(promises);\r\n        }\r\n        return deferred.promise;\r\n    });\r\n}\r\n\r\nPromise.prototype.all = function () {\r\n    return all(this);\r\n};\r\n\r\n/**\r\n * Waits for all promises to be settled, either fulfilled or\r\n * rejected.  This is distinct from `all` since that would stop\r\n * waiting at the first rejection.  The promise returned by\r\n * `allResolved` will never be rejected.\r\n * @param promises a promise for an array (or an array) of promises\r\n * (or values)\r\n * @return a promise for an array of promises\r\n */\r\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\r\nfunction allResolved(promises) {\r\n    return when(promises, function (promises) {\r\n        promises = array_map(promises, Q);\r\n        return when(all(array_map(promises, function (promise) {\r\n            return when(promise, noop, noop);\r\n        })), function () {\r\n            return promises;\r\n        });\r\n    });\r\n}\r\n\r\nPromise.prototype.allResolved = function () {\r\n    return allResolved(this);\r\n};\r\n\r\n/**\r\n * @see Promise#allSettled\r\n */\r\nQ.allSettled = allSettled;\r\nfunction allSettled(promises) {\r\n    return Q(promises).allSettled();\r\n}\r\n\r\n/**\r\n * Turns an array of promises into a promise for an array of their states (as\r\n * returned by `inspect`) when they have all settled.\r\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\r\n * promises for values)\r\n * @returns {Array[State]} an array of states for the respective values.\r\n */\r\nPromise.prototype.allSettled = function () {\r\n    return this.then(function (promises) {\r\n        return all(array_map(promises, function (promise) {\r\n            promise = Q(promise);\r\n            function regardless() {\r\n                return promise.inspect();\r\n            }\r\n            return promise.then(regardless, regardless);\r\n        }));\r\n    });\r\n};\r\n\r\n/**\r\n * Captures the failure of a promise, giving an oportunity to recover\r\n * with a callback.  If the given promise is fulfilled, the returned\r\n * promise is fulfilled.\r\n * @param {Any*} promise for something\r\n * @param {Function} callback to fulfill the returned promise if the\r\n * given promise is rejected\r\n * @returns a promise for the return value of the callback\r\n */\r\nQ.fail = // XXX legacy\r\nQ[\"catch\"] = function (object, rejected) {\r\n    return Q(object).then(void 0, rejected);\r\n};\r\n\r\nPromise.prototype.fail = // XXX legacy\r\nPromise.prototype[\"catch\"] = function (rejected) {\r\n    return this.then(void 0, rejected);\r\n};\r\n\r\n/**\r\n * Attaches a listener that can respond to progress notifications from a\r\n * promise's originating deferred. This listener receives the exact arguments\r\n * passed to ``deferred.notify``.\r\n * @param {Any*} promise for something\r\n * @param {Function} callback to receive any progress notifications\r\n * @returns the given promise, unchanged\r\n */\r\nQ.progress = progress;\r\nfunction progress(object, progressed) {\r\n    return Q(object).then(void 0, void 0, progressed);\r\n}\r\n\r\nPromise.prototype.progress = function (progressed) {\r\n    return this.then(void 0, void 0, progressed);\r\n};\r\n\r\n/**\r\n * Provides an opportunity to observe the settling of a promise,\r\n * regardless of whether the promise is fulfilled or rejected.  Forwards\r\n * the resolution to the returned promise when the callback is done.\r\n * The callback can return a promise to defer completion.\r\n * @param {Any*} promise\r\n * @param {Function} callback to observe the resolution of the given\r\n * promise, takes no arguments.\r\n * @returns a promise for the resolution of the given promise when\r\n * ``fin`` is done.\r\n */\r\nQ.fin = // XXX legacy\r\nQ[\"finally\"] = function (object, callback) {\r\n    return Q(object)[\"finally\"](callback);\r\n};\r\n\r\nPromise.prototype.fin = // XXX legacy\r\nPromise.prototype[\"finally\"] = function (callback) {\r\n    callback = Q(callback);\r\n    return this.then(function (value) {\r\n        return callback.fcall().then(function () {\r\n            return value;\r\n        });\r\n    }, function (reason) {\r\n        // TODO attempt to recycle the rejection with \"this\".\r\n        return callback.fcall().then(function () {\r\n            throw reason;\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Terminates a chain of promises, forcing rejections to be\r\n * thrown as exceptions.\r\n * @param {Any*} promise at the end of a chain of promises\r\n * @returns nothing\r\n */\r\nQ.done = function (object, fulfilled, rejected, progress) {\r\n    return Q(object).done(fulfilled, rejected, progress);\r\n};\r\n\r\nPromise.prototype.done = function (fulfilled, rejected, progress) {\r\n    var onUnhandledError = function (error) {\r\n        // forward to a future turn so that ``when``\r\n        // does not catch it and turn it into a rejection.\r\n        Q.nextTick(function () {\r\n            makeStackTraceLong(error, promise);\r\n            if (Q.onerror) {\r\n                Q.onerror(error);\r\n            } else {\r\n                throw error;\r\n            }\r\n        });\r\n    };\r\n\r\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\r\n    var promise = fulfilled || rejected || progress ?\r\n        this.then(fulfilled, rejected, progress) :\r\n        this;\r\n\r\n    if (typeof process === \"object\" && process && process.domain) {\r\n        onUnhandledError = process.domain.bind(onUnhandledError);\r\n    }\r\n\r\n    promise.then(void 0, onUnhandledError);\r\n};\r\n\r\n/**\r\n * Causes a promise to be rejected if it does not get fulfilled before\r\n * some milliseconds time out.\r\n * @param {Any*} promise\r\n * @param {Number} milliseconds timeout\r\n * @param {Any*} custom error message or Error object (optional)\r\n * @returns a promise for the resolution of the given promise if it is\r\n * fulfilled before the timeout, otherwise rejected.\r\n */\r\nQ.timeout = function (object, ms, error) {\r\n    return Q(object).timeout(ms, error);\r\n};\r\n\r\nPromise.prototype.timeout = function (ms, error) {\r\n    var deferred = defer();\r\n    var timeoutId = setTimeout(function () {\r\n        if (!error || \"string\" === typeof error) {\r\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\r\n            error.code = \"ETIMEDOUT\";\r\n        }\r\n        deferred.reject(error);\r\n    }, ms);\r\n\r\n    this.then(function (value) {\r\n        clearTimeout(timeoutId);\r\n        deferred.resolve(value);\r\n    }, function (exception) {\r\n        clearTimeout(timeoutId);\r\n        deferred.reject(exception);\r\n    }, deferred.notify);\r\n\r\n    return deferred.promise;\r\n};\r\n\r\n/**\r\n * Returns a promise for the given value (or promised value), some\r\n * milliseconds after it resolved. Passes rejections immediately.\r\n * @param {Any*} promise\r\n * @param {Number} milliseconds\r\n * @returns a promise for the resolution of the given promise after milliseconds\r\n * time has elapsed since the resolution of the given promise.\r\n * If the given promise rejects, that is passed immediately.\r\n */\r\nQ.delay = function (object, timeout) {\r\n    if (timeout === void 0) {\r\n        timeout = object;\r\n        object = void 0;\r\n    }\r\n    return Q(object).delay(timeout);\r\n};\r\n\r\nPromise.prototype.delay = function (timeout) {\r\n    return this.then(function (value) {\r\n        var deferred = defer();\r\n        setTimeout(function () {\r\n            deferred.resolve(value);\r\n        }, timeout);\r\n        return deferred.promise;\r\n    });\r\n};\r\n\r\n/**\r\n * Passes a continuation to a Node function, which is called with the given\r\n * arguments provided as an array, and returns a promise.\r\n *\r\n *      Q.nfapply(FS.readFile, [__filename])\r\n *      .then(function (content) {\r\n *      })\r\n *\r\n */\r\nQ.nfapply = function (callback, args) {\r\n    return Q(callback).nfapply(args);\r\n};\r\n\r\nPromise.prototype.nfapply = function (args) {\r\n    var deferred = defer();\r\n    var nodeArgs = array_slice(args);\r\n    nodeArgs.push(deferred.makeNodeResolver());\r\n    this.fapply(nodeArgs).fail(deferred.reject);\r\n    return deferred.promise;\r\n};\r\n\r\n/**\r\n * Passes a continuation to a Node function, which is called with the given\r\n * arguments provided individually, and returns a promise.\r\n * @example\r\n * Q.nfcall(FS.readFile, __filename)\r\n * .then(function (content) {\r\n * })\r\n *\r\n */\r\nQ.nfcall = function (callback /*...args*/) {\r\n    var args = array_slice(arguments, 1);\r\n    return Q(callback).nfapply(args);\r\n};\r\n\r\nPromise.prototype.nfcall = function (/*...args*/) {\r\n    var nodeArgs = array_slice(arguments);\r\n    var deferred = defer();\r\n    nodeArgs.push(deferred.makeNodeResolver());\r\n    this.fapply(nodeArgs).fail(deferred.reject);\r\n    return deferred.promise;\r\n};\r\n\r\n/**\r\n * Wraps a NodeJS continuation passing function and returns an equivalent\r\n * version that returns a promise.\r\n * @example\r\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\r\n * .then(console.log)\r\n * .done()\r\n */\r\nQ.nfbind =\r\nQ.denodeify = function (callback /*...args*/) {\r\n    var baseArgs = array_slice(arguments, 1);\r\n    return function () {\r\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\r\n        var deferred = defer();\r\n        nodeArgs.push(deferred.makeNodeResolver());\r\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\r\n        return deferred.promise;\r\n    };\r\n};\r\n\r\nPromise.prototype.nfbind =\r\nPromise.prototype.denodeify = function (/*...args*/) {\r\n    var args = array_slice(arguments);\r\n    args.unshift(this);\r\n    return Q.denodeify.apply(void 0, args);\r\n};\r\n\r\nQ.nbind = function (callback, thisp /*...args*/) {\r\n    var baseArgs = array_slice(arguments, 2);\r\n    return function () {\r\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\r\n        var deferred = defer();\r\n        nodeArgs.push(deferred.makeNodeResolver());\r\n        function bound() {\r\n            return callback.apply(thisp, arguments);\r\n        }\r\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\r\n        return deferred.promise;\r\n    };\r\n};\r\n\r\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\r\n    var args = array_slice(arguments, 0);\r\n    args.unshift(this);\r\n    return Q.nbind.apply(void 0, args);\r\n};\r\n\r\n/**\r\n * Calls a method of a Node-style object that accepts a Node-style\r\n * callback with a given array of arguments, plus a provided callback.\r\n * @param object an object that has the named method\r\n * @param {String} name name of the method of object\r\n * @param {Array} args arguments to pass to the method; the callback\r\n * will be provided by Q and appended to these arguments.\r\n * @returns a promise for the value or error\r\n */\r\nQ.nmapply = // XXX As proposed by \"Redsandro\"\r\nQ.npost = function (object, name, args) {\r\n    return Q(object).npost(name, args);\r\n};\r\n\r\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\r\nPromise.prototype.npost = function (name, args) {\r\n    var nodeArgs = array_slice(args || []);\r\n    var deferred = defer();\r\n    nodeArgs.push(deferred.makeNodeResolver());\r\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\r\n    return deferred.promise;\r\n};\r\n\r\n/**\r\n * Calls a method of a Node-style object that accepts a Node-style\r\n * callback, forwarding the given variadic arguments, plus a provided\r\n * callback argument.\r\n * @param object an object that has the named method\r\n * @param {String} name name of the method of object\r\n * @param ...args arguments to pass to the method; the callback will\r\n * be provided by Q and appended to these arguments.\r\n * @returns a promise for the value or error\r\n */\r\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\r\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\r\nQ.ninvoke = function (object, name /*...args*/) {\r\n    var nodeArgs = array_slice(arguments, 2);\r\n    var deferred = defer();\r\n    nodeArgs.push(deferred.makeNodeResolver());\r\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\r\n    return deferred.promise;\r\n};\r\n\r\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\r\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\r\nPromise.prototype.ninvoke = function (name /*...args*/) {\r\n    var nodeArgs = array_slice(arguments, 1);\r\n    var deferred = defer();\r\n    nodeArgs.push(deferred.makeNodeResolver());\r\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\r\n    return deferred.promise;\r\n};\r\n\r\n/**\r\n * If a function would like to support both Node continuation-passing-style and\r\n * promise-returning-style, it can end its internal promise chain with\r\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\r\n * elects to use a nodeback, the result will be sent there.  If they do not\r\n * pass a nodeback, they will receive the result promise.\r\n * @param object a result (or a promise for a result)\r\n * @param {Function} nodeback a Node.js-style callback\r\n * @returns either the promise or nothing\r\n */\r\nQ.nodeify = nodeify;\r\nfunction nodeify(object, nodeback) {\r\n    return Q(object).nodeify(nodeback);\r\n}\r\n\r\nPromise.prototype.nodeify = function (nodeback) {\r\n    if (nodeback) {\r\n        this.then(function (value) {\r\n            Q.nextTick(function () {\r\n                nodeback(null, value);\r\n            });\r\n        }, function (error) {\r\n            Q.nextTick(function () {\r\n                nodeback(error);\r\n            });\r\n        });\r\n    } else {\r\n        return this;\r\n    }\r\n};\r\n\r\n// All code before this point will be filtered from stack traces.\r\nvar qEndingLine = captureLine();\r\n\r\nreturn Q;\r\n\r\n});\r\n\r\n}).call(this,require(\"/Users/antoine/projects/oauth-js/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\"))\r\n},{\"/Users/antoine/projects/oauth-js/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\":15}]},{},[8])\r\n});");
    obj.setName("oauth-js");
    obj.setParse("");
    obj.setUse("onDemand");
});
