<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>RISCOSSPlatformLayerManagerCode</web>
  <name>DataCollectorManager</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>RISCOSSPlatformLayerManagerCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1410948604000</creationDate>
  <date>1411135521000</date>
  <contentUpdateDate>1411132698000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>RISCOSSPlatformLayerManagerCode.DataCollectorManager</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>029067c6-da10-4c89-a738-cd8edf687820</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function ($) {

  var MESSAGES = {
    dataCollectors: 'Data Collectors',
    deletingObject: 'Deleting Object',
    doneDeletingObject: 'Done',
    errorDeletingObject: 'Error',
    periodicity: 'Frequency'
  };

  var uid = function () { return 'uid-' + Math.random().toString(32).substring(2); };
  var appendElem = function ($container, type, id) {
    id = id || uid();
    $container.append("&lt;"+type+" id="+id+"&gt;&lt;/"+type+"&gt;");
    return $('#'+id);
  };

  var toggleHidden = function ($elem) {
    if ($elem.attr('style') === 'display:none;') {
      $elem.removeAttr('style');
      $elem.find('.post-input[data-name]').each(function (num, el) {
        var $el = $(el);
        $el.attr('name', $el.attr('data-name'));
      });
    } else {
      $elem.attr('style', 'display:none;');
      // stash the 'name' field in data-name and remove it so it will not create a new obj.
      $elem.find('.post-input[name]').each(function (num, el) {
        var $el = $(el);
        $el.attr('data-name', $el.attr('name'));
        $el.removeAttr('name');
      });
    }
  };

  var makeLabeledElement = function ($list, labelTxt, elementType) {
    var id = uid();
    var $labelDT = appendElem($list, 'dt');
    var $label = appendElem($labelDT, 'label', id + '-label');
    $label.attr('for', id);
    $label.text(labelTxt);
    var $inputDD = appendElem($list, 'dd');
    return appendElem($inputDD, elementType, id);
  }

  var formToken = $('meta[name="form_token"]').attr('content');
  var getObjRemoveURL = function (baseObjRemoveURL, className) {
    return baseObjRemoveURL +
      '?form_token=' + formToken +
      '&amp;classname=' + className +
      '&amp;classid=0' +
      '&amp;ajax=1';
  };

  var editCollector = function (col, $elem, objRemoveURL) {

    var $checkbox = makeLabeledElement($elem, col.name, 'input');
    $checkbox.attr('type', 'checkbox');
    var $subsection = appendElem($checkbox.parent(), 'div');

    var $list = appendElem($subsection, 'dl');
    for (var i = 0; i &lt; col.properties.length; i++) {
      var prop = col.properties[i];
      var $input = makeLabeledElement($list, prop.prettyName, 'input');
      switch (prop.type) {
        case 'StringClass': $input.attr('type', 'text'); break;
        case 'BooleanClass': $input.attr('type', 'checkbox'); break;
        case 'NumberClass': $input.attr('type', 'text'); break;
      }
      $input.attr('class', 'post-input');
      $input.attr('name', 'DataCollectors.' + col.name + '_0_' + prop.name);
      $input.attr('value', prop.value || '');
    }

    var $input = makeLabeledElement($list, MESSAGES.periodicity, 'input');
    var freqEdit = col.periodicity_edit.replace(/^{{[^}]+}}/, '').replace(/{{[^}]+}}$/, '');
    var $freqDD = $($input[0].parentNode);
    var inputId = $input.attr('id');
    $input.remove();
    $freqDD.append(freqEdit);
    $freqDD.find('select').attr('id', inputId).attr('class', 'post-input');
    $freqDD.find('input').attr('class', 'post-input');

    if (col.enabled) {
      $checkbox.attr('checked', 'checked');
    } else {
      toggleHidden($subsection);
    }

    $checkbox.click(function () {
      if (col.enabled) {
        var inProgress = new XWiki.widgets.Notification(MESSAGES.deletingObject, "inprogress");
        $.ajax({
          url: getObjRemoveURL(objRemoveURL, 'DataCollectors.' + col.name),
          method: 'POST',
          success: function () {
            inProgress.hide();
            new XWiki.widgets.Notification(MESSAGES.doneDeletingObject, "done");
            col.enabled = false;
          },
          error: function (jqXHR, error) {
            inProgress.hide();
            new XWiki.widgets.Notification(MESSAGES.errorDeletingObject + ' ' + error, "error");
          }
        });
      }
      toggleHidden($subsection);
    });
  };

  var edit = function (config, $elem) {
    var $updateOrCreate = appendElem($elem, 'input');
    $updateOrCreate.attr('type', 'hidden');
    $updateOrCreate.attr('value', 'updateOrCreate');
    $updateOrCreate.attr('name', 'objectPolicy');

    var $dl = appendElem($elem, 'dl');
    $dl.append('&lt;dt&gt;'+MESSAGES.dataCollectors+'&lt;/dt&gt;');
    var $dd = appendElem($dl, 'dd');
    for (var i = 0; i &lt; config.collectors.length; i++) {
      editCollector(config.collectors[i], $dd, config.objRemoveURL);
    }
  };

  var viewCollector = function (col, $ul) {
    var $li = appendElem($ul, 'li');
    $li.text(col.name + ' - Running ' + col.periodicity_view);
  };

  var view = function (config, $elem) {
    var $dl = appendElem($elem, 'dl');
    $dl.append('&lt;dt&gt;'+MESSAGES.dataCollectors+'&lt;/dt&gt;');
    var $dd = appendElem($dl, 'dd');
    var $ul = appendElem($dd, 'ul');
    for (var i = 0; i &lt; config.collectors.length; i++) {
      viewCollector(config.collectors[i], $ul);
    }
  };

  var $elem = $('.data-collectors');
  var config = JSON.parse(decodeURIComponent($elem.text().replace(/\+/g, '%20')));
  $elem.text('');
  $elem.removeAttr('style');
  $elem.append('&lt;hr /&gt;');

  if (XWiki.contextaction === 'edit') {
    edit(config, $elem);
  } else {
    view(config, $elem);
  }
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity output="false"}}
##
##
## Data Collector Configuration.
##

## Load the jsx which this code will send data to.
$xwiki.jsx.use('RISCOSSPlatformLayerManagerCode.DataCollectorManager', {"minify":"false"})

## The final output
#set ($outConf = {})

## URL for removing objects, used by the jsx
$outConf.put("objRemoveURL", $doc.getURL("objectremove"))

## List of data collectors
#set ($collectors = [])
$outConf.put("collectors", $collectors)

#set ($schedulesList = $doc.getObjects("RISCOSSPlatformLayerManagerCode.DataCollectorScheduler"))
#set ($schedulesMap = {})
#foreach ($s in $schedulesList)
  #if ("$!s.getProperty('collectorName')" != "")
    $schedulesMap.put($s.getProperty("collectorName").getValue(), $s)
  #end
#end

#set ($collectorDocNames =
  $services.query.xwql('from doc.object(RISCOSSPlatformCode.DataCollector) as x').execute())
#foreach($collectorName in $collectorDocNames)
  #set ($collectorOut = {})
  $collectors.add($collectorOut)
  #set ($col = $xwiki.getDocument($collectorName))
  #set ($cobj = $doc.getObject($collectorName))

  #if ("$!cobj" != "")
    $collectorOut.put('enabled', true)
  #end

  $collectorOut.put("name", $col.getName())

  #set($schedule = $schedulesMap.get("DataCollectors.$col.getName()"))
  #if ("$!schedule" != "")
    $collectorOut.put("periodicity_edit", "$schedule.display('periodicity', 'edit')")
    $collectorOut.put("periodicity_view", "$schedule.getProperty('periodicity').getValue()")
  #end

  #set($props = [])
  $collectorOut.put("properties", $props)

  #set($collectorProps = $col.getxWikiClass().getEnabledProperties())
  #foreach($cp in $collectorProps)
    #set($prop = {})
    $props.add($prop)
    $prop.put("name", "$cp.getName()")
    $prop.put("prettyName", $cp.getPrettyName())
    $prop.put("type", $cp.getType())
    #if ("$!cobj" != "")
      $prop.put("value", $cobj.getProperty($cp.getName()).getValue())
    #end
  #end
#end

{{/velocity}}
{{velocity}}
## Data Collector Output, this is picked up by the jsx javascript.
{{html clean="false"}}
&lt;div class="data-collectors" style="display:none;"&gt;$escapetool.url($jsontool.serialize($outConf))&lt;/div&gt;
{{/html}}
{{/velocity}}</content>
</xwikidoc>
