{{velocity output="false"}}
## -*- Mode:Velocity
$xwiki.jsx.use($doc.fullName, {"minify" : false})

#if(!($request.entity && $request.riskConfiguration))
  #set($error = "{{error}} Missing parameters {{/error}}")
#else
  ## Load all the models associated to the layer of the entity under analysis.
  #set($entityDocumentReference = $services.model.createDocumentReference(null, "RISCOSSPlatformEntities", $request.entity.split("\.", 2)[1]))
  #set($entityDocument = $xwiki.getDocument($entityDocumentReference))
  #set($layer = $entityDocument.getObject("RISCOSSPlatformLayerManagerCode.EntityClass").getProperty("layer").value)
  #set($rdids = $entityDocument.getObject("RISCOSSPlatformLayerManagerCode.EntityClass").getProperty("rdids").value)
  #set($riskConfigurationDocument = $xwiki.getDocument($request.riskConfiguration))
  #set($raeUtils = $services.riscoss.riskAnalysisEngineUtilsService)
  #set($rae = $services.riscoss.riskAnalysisEngineService.createInstance())
  #set($riskModelReferences = $riskConfigurationDocument.getObjects("RISCOSSPlatformRiskConfigurationManagerCode.RiskModelClass", "layer", $layer))    

  #set($goalModelDocumentName = $riskConfigurationDocument.getObject("RISCOSSPlatformRiskConfigurationManagerCode.RiskConfigurationClass").getProperty("goalModel").value)
  #if($goalModelDocumentName)    
    #set($goalModelDocument = $xwiki.getDocument($services.model.resolveDocument($goalModelDocumentName)))
    #set($goalModelDataName = $goalModelDocument.getObject("RISCOSSPlatformModelManagerCode.GoalModelClass").getProperty("goalModelData").value)
    #set($goalModelData = $goalModelDocument.getAttachment($goalModelDataName).getContentAsString())
  #end
  
  #if($riskModelReferences.size() == 0) 
    #set($error = "{{error}}No risk models defined in risk configuration '[[$riskConfigurationDocument]]' for layer [[$layer]]. Please associate a model to this layer and redo the evaluation.{{/error}}")
  #end
  
  #if($goalModelData) 
    $rae.loadModel($goalModelData)
  #end
  
  #foreach($riskModelReference in $riskModelReferences)
    #set($riskModelDocumentName = $riskModelReference.getProperty("riskModel").value)
    #set($riskModelDocument = $xwiki.getDocument($riskModelDocumentName))
    #set($riskModelDataName = $riskModelDocument.getObject("RISCOSSPlatformModelManagerCode.RiskModelClass").getProperty("riskModelData").value)
    #set($riskModelData = $riskModelDocument.getAttachment($riskModelDataName).getContentAsString())

    $rae.loadModel($riskModelData)
  #end
  
  ## This is the risk data that will contain the final aggregated risk data ready to be evaluated
  #set($riskData = {})
  #set($errors = {})

  ## Get risk data from the request. This also initializes the default values when they're missing.
  #set($riskDataFromRequest = $raeUtils.getRiskDataFromRequest($rae, $request.parameterMap))
  $riskData.putAll($riskDataFromRequest.riskData) ## This is used for initializing   
 
  ## If we haven't received new data via the set data form, populate with RDR data. setDataFromRequest is
  ## sent by the SetData form when the user provides/overrides actual data.
  #if(!$request.setDataFromRequest)
    #set($rdr = $xwiki.getDocument("RISCOSSPlatformCode.RISCOSSConfiguration").get("rdr"))
    #if($!rdids != "")
      $riskData.putAll($raeUtils.fetchRiskData($rae, $rdr, $rdids))
    #else
      $riskData.putAll($raeUtils.fetchRiskData($rae, $rdr, $entityDocument.name))
    #end
  #end  
  
  $raeUtils.setRiskData($rae, $riskData)
  ##set($result = $raeUtils.runAnalysis($rae))
  #set($structuredResults = $raeUtils.runAnalysisWithStructuredResults($rae))
  
  #set($inputData = {})
  #set($inputChunks = $services.riscoss.riskAnalysisEngineUtilsService.getInputs($rae))
  #foreach($inputChunk in $inputChunks)
    #set($question = $services.riscoss.riskAnalysisEngineUtilsService.getQuestion($rae, $inputChunk))
    #set($value = $!riskData.get($inputChunk.id))
    #set($inputInfo = {"question" : $question, "value" : $value})
    #set($discard = $inputData.put($inputChunk.id, $inputInfo))
  #end  
#end
{{/velocity}}

{{velocity}}
#if(!$error)
= Risk evaluation results

; Entity
: [[$entityDocument]]

; Risk configuration
: [[$riskConfigurationDocument]]

{{html}}
<div id='resultData' style='display: none'>
$escapetool.url($jsontool.serialize($structuredResults))
</div>

<div id='inputData' style='display: none'>
$escapetool.url($jsontool.serialize($inputData))
</div>
{{/html}}

----

#set($inputChunks = $services.riscoss.riskAnalysisEngineUtilsService.getInputs($rae)) ##
== Inputs used for the analysis
#foreach($inputChunk in $inputChunks)
|= #if($!inputData.get($inputChunk.id).get("question") != "") $inputData.get($inputChunk.id).get("question") #else Input for '$inputChunk.id' #end | $!inputData.get($inputChunk.id).get("value")
#end

{{html}}
<table border='0' style='border: 0px'>
<tr>
  <td>
    <form action='$xwiki.getDocument("RISCOSSPlatformRiskAnalysisManagerCode.SetData").getURL()' method='POST'>
      <input type='hidden' name='entity' value='$request.entity'/>
      <input type='hidden' name='riskConfiguration' value='$request.riskConfiguration'/>
      #foreach($rd in $riskData.entrySet())
        #if($rd.value.class.name.contains("Distribution"))
          #foreach($v in $rd.value.values)
            <input type='hidden' name='$rd.key' value='$v'/> 
          #end
        #elseif($rd.value.class.name.contains("Evidence"))
          <input type='hidden' name='$rd.key' value='$rd.value.positive'/>
          <input type='hidden' name='$rd.key' value='$rd.value.negative'/>  
        #else
          <input type='hidden' name='$rd.key' value='$rd.value'/>
        #end
      #end
      <input type='submit' value='Change input data and re-evaluate' class='button'/>
     </form>
  </td>
  <td>
    <form action='$xwiki.getDocument("RISCOSSPlatformRiskAnalysisManagerCode.SaveSession").getURL()' method='POST' id='saveSessionForm'>
      <input type='hidden' name='sessionName' id='sessionName'/>
      <input type='hidden' name='entity' value='$request.entity'/>
      <input type='hidden' name='riskConfiguration' value='$request.riskConfiguration'/>
      <input type='hidden' name='inputData' id='inputDataInput'/>
      <input type='hidden' name='resultData' id='resultDataInput'/>      
      <input type='submit' value='Save session' class='button'/>
    </form>
  </td>
</tr>
</table>
{{/html}}

#else
  $error
#end
{{/velocity}}
