<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>RISCOSSPlatformRiskAnalysisManagerCode</web>
  <name>RiskAnalysisSessionViewSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>RISCOSSPlatformRiskAnalysisManagerCode.RiskAnalysisSessionClass</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>0</creationDate>
  <date>0</date>
  <contentUpdateDate>0</contentUpdateDate>
  <version>1.1</version>
  <title>#if($doc.name == 'RiskAnalysisSessionSheet')RiskAnalysisSession Sheet#{else}$services.display.title($doc, {'displayerHint': 'default'})#end</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>RISCOSSPlatformRiskAnalysisManagerCode.RiskAnalysisSessionViewSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>04ef4195-bf16-4a2a-b1d6-9697c2b22b51</guid>
    <property>
      <cache>forbid</cache>
    </property>
    <property>
      <code>var XWiki = (function(XWiki) {  
  var drawDistribution = function(canvas, v) {
    var colors = ["#298a08", "#86b404", "#ffbf00", "#fa5858", "#ff0000"];
    var context = canvas.getContext("2d")
    var width = canvas.width;
    var height = canvas.height;

    context.beginPath();
    context.rect(0, 0, canvas.width, canvas.height);
    context.stroke();
    
    var barHeight = Math.floor(canvas.height / v.length);
    var fontSize = Math.min(barHeight, 10) ;
    context.font = "bold " + fontSize + "px sans-serif"    
    var maxTextWidth = context.measureText('999.99%').width;
        
    for(i = 0; i &lt; v.length; i++) {
      context.beginPath();
      context.rect(0, i * barHeight, Math.floor(canvas.width  * v[i]), barHeight);
      context.fillStyle = colors[i];      
      context.fill();
      context.fillStyle = '#303030';
      context.textBaseline = "top";
      
      context.fillText('' + Math.floor(10000 * v[i]) / 100 + "%", Math.min((canvas.width * v[i]) + 5, canvas.width - maxTextWidth - 5), (barHeight * i) + (barHeight - fontSize) / 2);
    }
  }

  var displayData = function(element, riskConfiguration, data) {
    var dataByType = {};
    
    for(key in data) {
      var type = data[key].TYPE;
      if(dataByType[type] == null) {
        dataByType[type] = {};
      }
      
      dataByType[type][key] = data[key];
    }
    
    element.setStyle({display: ''});
  
    var html = '&lt;table width="100%"&gt;\n'
    for(type in dataByType) {
      var currentData = dataByType[type];
      html = html + '&lt;tr&gt;&lt;th colspan="2"&gt;&amp;nbsp;&lt;/th&gt;&lt;/tr&gt;'
      for(key in currentData) {
        html = html + '&lt;tr&gt;&lt;td&gt;' + currentData[key].DESCRIPTION + '&lt;/td&gt;';
    
        if(currentData[key].TYPE == 'EVIDENCE') {
          html = html + '&lt;td&gt;&lt;div id="' + riskConfiguration + '_' + key + '"/&gt;&lt;/td&gt;&lt;/tr&gt;\n';
        } else if(currentData[key].TYPE == 'INTEGER' || currentData[key].TYPE == 'REAL') {
          html = html + '&lt;td&gt;' + currentData[key].VALUE + '&lt;/td&gt;&lt;/tr&gt;\n';
        } else if(currentData[key].TYPE == 'DISTRIBUTION') {
          html = html + '&lt;td&gt;&lt;canvas id="' + riskConfiguration + '_' + key + '" width="200" height="50"/&gt;&lt;/td&gt;&lt;/tr&gt;\n';
        }      
      }
    }
  
    html = html + '&lt;/table&gt;\n';
  
    element.update(html);
  
    for(key in data) {    
      if(data[key].TYPE == "EVIDENCE") {
        var div = $(riskConfiguration + '_' + key);
        var altText = 'Positive: ' + data[key].VALUE.positive + ', Negative: ' + data[key].VALUE.negative;
        var gauge = new Element('img', {
          src: '$xwiki.getDocument('RISCOSSPlatformCode.EvidenceGauge').getExternalURL()?positive=' + data[key].VALUE.positive + '&amp;negative=' + data[key].VALUE.negative, 
          alt: altText});
        div.insert({top: gauge});
      }
      else if(data[key].TYPE == "DISTRIBUTION") {
        var canvas = $(riskConfiguration + '_' + key);
        drawDistribution(canvas, data[key].VALUE.values);
      }
    }
  }
  
  var displayInputData = function(element, data) {
    var html = '&lt;table width="100%"&gt;&lt;tr&gt;&lt;th colspan="2"&gt;Provided inputs for this result&lt;/th&gt;&lt;/tr&gt;';
    
    for(key in data) {
      if(data[key].question) {
        html = html + '&lt;tr&gt;&lt;td&gt;' + data[key].question + '&lt;/td&gt;';
      }
      else {
        html = html + '&lt;tr&gt;&lt;td&gt;Value for \'' + key + '\'&lt;/td&gt;';
      }
      html = html + '&lt;td&gt;' + data[key].value + '&lt;/td&gt;&lt;/tr&gt;';
    }
    html = html + '&lt;/table&gt;';
    
    element.update(html);
    element.setStyle({display: ''});
  }

  function init() {
    var resultElements = $$('div.resultData');
    for(i = 0; i &lt; resultElements.length; i++) {
      var resultElement = resultElements[i];
      var data = JSON.parse(resultElement.innerText);
      displayData(resultElement, resultElement.getAttribute('riskConfiguration'), data);
    }
    
    var inputDataElements = $$('div.resultInput');
    
    console.log(inputDataElements);
    for(i = 0; i &lt; inputDataElements.length; i++) {
      var inputDataElement = inputDataElements[i];
      var data = JSON.parse(inputDataElement.innerText);
      displayInputData(inputDataElement, data);
    }
  }
  
  //Wait for dom load
  (XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);

  //End XWiki augmentation
  return XWiki;
} (XWiki || {}))</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.SheetDescriptorClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <action>
        <customDisplay/>
        <disabled>0</disabled>
        <name>action</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>Action</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </action>
    </class>
    <name>RISCOSSPlatformRiskAnalysisManagerCode.RiskAnalysisSessionViewSheet</name>
    <number>0</number>
    <className>XWiki.SheetDescriptorClass</className>
    <guid>8f0b1e7b-7811-4ca7-9148-e307e9adec25</guid>
    <property>
      <action>view</action>
    </property>
  </object>
  <content>{{velocity}}
$xwiki.jsx.use("RISCOSSPlatformRiskAnalysisManagerCode.RiskAnalysisSessionViewSheet")
#set($riskAnalysisSessionObject = $doc.getObject('RISCOSSPlatformRiskAnalysisManagerCode.RiskAnalysisSessionClass'))
#set($targetEntity = $xwiki.getDocument($riskAnalysisSessionObject.getProperty('entity').value))

; Target entity
: $targetEntity.title

#set($riskEvaluations = $doc.getObjects('RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass'))
|= Risk configuration |= Evaluation Results
#foreach($riskEvaluation in $riskEvaluations)
  #set($riskConfiguration = $xwiki.getDocument($riskEvaluation.getProperty('riskConfiguration').value))
| ((($riskConfiguration.title 
  #if($riskEvaluation.getProperty('result').value == '')
{{html wiki="true"}}
    &lt;form action="$xwiki.getURL('RISCOSSPlatformRiskAnalysisManagerCode.Evaluate')" method="POST"&gt;
      &lt;input type="hidden" name="riskAnalysisSession" value="$doc.fullName"/&gt;
      &lt;input type="hidden" name="riskConfiguration" value="$riskConfiguration.fullName"/&gt;
      &lt;input type="hidden" name="entity" value="$targetEntity.fullName"/&gt;
      &lt;input type="submit" value="Evaluate" class="button"/&gt;
    &lt;/form&gt;
{{/html}}
  #end
))) | (((
  {{html}}
    #if($riskEvaluation.getProperty('result').value != '')      
      &lt;div class="resultData" style="display: none" riskConfiguration="$riskConfiguration.fullName"&gt;$riskEvaluation.getProperty('result').value&lt;/div&gt;
      &lt;div class="resultInput" style="display: none"&gt;$riskEvaluation.getProperty('inputData').value&lt;/div&gt;
    #end
  {{/html}}
)))
#end

----

{{html wiki="true"}}
#set($xredirect = $xwiki.getDocument("RISCOSSPlatformRiskConfigurations.WebHome").getURL())
&lt;span class="buttonwrapper"&gt;
[[$services.localization.render("delete")&gt;&gt;$doc.getExternalURL("delete", "xredirect=${xredirect}")]]
&lt;/span&gt;
{{/html}}
{{/velocity}}</content>
</xwikidoc>
